---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(\"features/aug_assign.fe\", &src, &context)"

---
ModuleAttributes {
    type_defs: {
        "Foo": Contract(
            Contract {
                name: "Foo",
                functions: [
                    FunctionAttributes {
                        is_public: true,
                        name: "add",
                        params: [
                            (
                                "a",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                            (
                                "b",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "add_from_mem",
                        params: [
                            (
                                "a",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                            (
                                "b",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "add_from_sto",
                        params: [
                            (
                                "a",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                            (
                                "b",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "bit_and",
                        params: [
                            (
                                "a",
                                Base(
                                    Numeric(
                                        U8,
                                    ),
                                ),
                            ),
                            (
                                "b",
                                Base(
                                    Numeric(
                                        U8,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U8,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "bit_or",
                        params: [
                            (
                                "a",
                                Base(
                                    Numeric(
                                        U8,
                                    ),
                                ),
                            ),
                            (
                                "b",
                                Base(
                                    Numeric(
                                        U8,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U8,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "bit_xor",
                        params: [
                            (
                                "a",
                                Base(
                                    Numeric(
                                        U8,
                                    ),
                                ),
                            ),
                            (
                                "b",
                                Base(
                                    Numeric(
                                        U8,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U8,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "div",
                        params: [
                            (
                                "a",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                            (
                                "b",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "lshift",
                        params: [
                            (
                                "a",
                                Base(
                                    Numeric(
                                        U8,
                                    ),
                                ),
                            ),
                            (
                                "b",
                                Base(
                                    Numeric(
                                        U8,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U8,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "mod",
                        params: [
                            (
                                "a",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                            (
                                "b",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "mul",
                        params: [
                            (
                                "a",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                            (
                                "b",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "pow",
                        params: [
                            (
                                "a",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                            (
                                "b",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "rshift",
                        params: [
                            (
                                "a",
                                Base(
                                    Numeric(
                                        U8,
                                    ),
                                ),
                            ),
                            (
                                "b",
                                Base(
                                    Numeric(
                                        U8,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U8,
                            ),
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "sub",
                        params: [
                            (
                                "a",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                            (
                                "b",
                                Base(
                                    Numeric(
                                        U256,
                                    ),
                                ),
                            ),
                        ],
                        return_type: Base(
                            Numeric(
                                U256,
                            ),
                        ),
                    },
                ],
            },
        ),
    },
}

note: 
  ┌─ features/aug_assign.fe:5:9
  │
5 │         a += b
  │         ^ attributes hash: 1230752710897721197
  │
  = ExpressionAttributes {
        typ: Base(
            Numeric(
                U256,
            ),
        ),
        location: Value,
        move_location: None,
    }

note: 
  ┌─ features/aug_assign.fe:5:14
  │
5 │         a += b
  │              ^ attributes hash: 1230752710897721197
  │
  = ExpressionAttributes {
        typ: Base(
            Numeric(
                U256,
            ),
        ),
        location: Value,
        move_location: None,
    }

note: 
  ┌─ features/aug_assign.fe:6:16
  │
6 │         return a
  │                ^ attributes hash: 1230752710897721197
  │
  = ExpressionAttributes {
        typ: Base(
            Numeric(
                U256,
            ),
        ),
        location: Value,
        move_location: None,
    }

note: 
  ┌─ features/aug_assign.fe:9:9
  │
9 │         a -= b
  │         ^ attributes hash: 1230752710897721197
  │
  = ExpressionAttributes {
        typ: Base(
            Numeric(
                U256,
            ),
        ),
        location: Value,
        move_location: None,
    }

note: 
  ┌─ features/aug_assign.fe:9:14
  │
9 │         a -= b
  │              ^ attributes hash: 1230752710897721197
  │
  = ExpressionAttributes {
        typ: Base(
            Numeric(
                U256,
            ),
        ),
        location: Value,
        move_location: None,
    }

note: 
   ┌─ features/aug_assign.fe:10:16
   │
10 │         return a
   │                ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:13:9
   │
13 │         a *= b
   │         ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:13:14
   │
13 │         a *= b
   │              ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:14:16
   │
14 │         return a
   │                ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:17:9
   │
17 │         a /= b
   │         ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:17:14
   │
17 │         a /= b
   │              ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:18:16
   │
18 │         return a
   │                ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:21:9
   │
21 │         a %= b
   │         ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:21:14
   │
21 │         a %= b
   │              ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:22:16
   │
22 │         return a
   │                ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:25:9
   │
25 │         a **= b
   │         ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:25:15
   │
25 │         a **= b
   │               ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:26:16
   │
26 │         return a
   │                ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:29:9
   │
29 │         a <<= b
   │         ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:29:15
   │
29 │         a <<= b
   │               ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:30:16
   │
30 │         return a
   │                ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:33:9
   │
33 │         a >>= b
   │         ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:33:15
   │
33 │         a >>= b
   │               ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:34:16
   │
34 │         return a
   │                ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:37:9
   │
37 │         a |= b
   │         ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:37:14
   │
37 │         a |= b
   │              ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:38:16
   │
38 │         return a
   │                ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:41:9
   │
41 │         a ^= b
   │         ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:41:14
   │
41 │         a ^= b
   │              ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:42:16
   │
42 │         return a
   │                ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:45:9
   │
45 │         a &= b
   │         ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:45:14
   │
45 │         a &= b
   │              ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:46:16
   │
46 │         return a
   │                ^ attributes hash: 11226462071603862164
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U8,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:49:9
   │
49 │         self.my_num = a
   │         ^^^^^^^^^^^ attributes hash: 15242400217978318652
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: Some(
                 0,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:49:23
   │
49 │         self.my_num = a
   │                       ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:50:9
   │
50 │         self.my_num += b
   │         ^^^^^^^^^^^ attributes hash: 15242400217978318652
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: Some(
                 0,
             ),
         },
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:50:24
   │
50 │         self.my_num += b
   │                        ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:51:16
   │
51 │         return self.my_num
   │                ^^^^^^^^^^^ attributes hash: 9658275715484404641
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Storage {
             nonce: Some(
                 0,
             ),
         },
         move_location: Some(
             Value,
         ),
     }

note: 
   ┌─ features/aug_assign.fe:55:9
   │
55 │         my_array[7] = a
   │         ^^^^^^^^ attributes hash: 1343256391726658592
   │
   = ExpressionAttributes {
         typ: Array(
             Array {
                 size: 10,
                 inner: Numeric(
                     U256,
                 ),
             },
         ),
         location: Memory,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:55:18
   │
55 │         my_array[7] = a
   │                  ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:55:9
   │
55 │         my_array[7] = a
   │         ^^^^^^^^^^^ attributes hash: 13245336599501214748
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Memory,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:55:23
   │
55 │         my_array[7] = a
   │                       ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:56:9
   │
56 │         my_array[7] += b
   │         ^^^^^^^^ attributes hash: 1343256391726658592
   │
   = ExpressionAttributes {
         typ: Array(
             Array {
                 size: 10,
                 inner: Numeric(
                     U256,
                 ),
             },
         ),
         location: Memory,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:56:18
   │
56 │         my_array[7] += b
   │                  ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:56:9
   │
56 │         my_array[7] += b
   │         ^^^^^^^^^^^ attributes hash: 13245336599501214748
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Memory,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:56:24
   │
56 │         my_array[7] += b
   │                        ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:57:16
   │
57 │         return my_array[7]
   │                ^^^^^^^^ attributes hash: 1343256391726658592
   │
   = ExpressionAttributes {
         typ: Array(
             Array {
                 size: 10,
                 inner: Numeric(
                     U256,
                 ),
             },
         ),
         location: Memory,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:57:25
   │
57 │         return my_array[7]
   │                         ^ attributes hash: 1230752710897721197
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Value,
         move_location: None,
     }

note: 
   ┌─ features/aug_assign.fe:57:16
   │
57 │         return my_array[7]
   │                ^^^^^^^^^^^ attributes hash: 14631543492293849089
   │
   = ExpressionAttributes {
         typ: Base(
             Numeric(
                 U256,
             ),
         ),
         location: Memory,
         move_location: Some(
             Value,
         ),
     }

note: 
  ┌─ features/aug_assign.fe:4:5
  │  
4 │ ╭     pub fn add(a: u256, b: u256) -> u256:
5 │ │         a += b
6 │ │         return a
  │ ╰────────────────^ attributes hash: 13445866605905986564
  │  
  = FunctionAttributes {
        is_public: true,
        name: "add",
        params: [
            (
                "a",
                Base(
                    Numeric(
                        U256,
                    ),
                ),
            ),
            (
                "b",
                Base(
                    Numeric(
                        U256,
                    ),
                ),
            ),
        ],
        return_type: Base(
            Numeric(
                U256,
            ),
        ),
    }

note: 
   ┌─ features/aug_assign.fe:8:5
   │  
 8 │ ╭     pub fn sub(a: u256, b: u256) -> u256:
 9 │ │         a -= b
10 │ │         return a
   │ ╰────────────────^ attributes hash: 2008695864149423942
   │  
   = FunctionAttributes {
         is_public: true,
         name: "sub",
         params: [
             (
                 "a",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "b",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Numeric(
                 U256,
             ),
         ),
     }

note: 
   ┌─ features/aug_assign.fe:12:5
   │  
12 │ ╭     pub fn mul(a: u256, b: u256) -> u256:
13 │ │         a *= b
14 │ │         return a
   │ ╰────────────────^ attributes hash: 5497489415096861009
   │  
   = FunctionAttributes {
         is_public: true,
         name: "mul",
         params: [
             (
                 "a",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "b",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Numeric(
                 U256,
             ),
         ),
     }

note: 
   ┌─ features/aug_assign.fe:16:5
   │  
16 │ ╭     pub fn div(a: u256, b: u256) -> u256:
17 │ │         a /= b
18 │ │         return a
   │ ╰────────────────^ attributes hash: 1962899922909433303
   │  
   = FunctionAttributes {
         is_public: true,
         name: "div",
         params: [
             (
                 "a",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "b",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Numeric(
                 U256,
             ),
         ),
     }

note: 
   ┌─ features/aug_assign.fe:20:5
   │  
20 │ ╭     pub fn mod(a: u256, b: u256) -> u256:
21 │ │         a %= b
22 │ │         return a
   │ ╰────────────────^ attributes hash: 8955069169208171999
   │  
   = FunctionAttributes {
         is_public: true,
         name: "mod",
         params: [
             (
                 "a",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "b",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Numeric(
                 U256,
             ),
         ),
     }

note: 
   ┌─ features/aug_assign.fe:24:5
   │  
24 │ ╭     pub fn pow(a: u256, b: u256) -> u256:
25 │ │         a **= b
26 │ │         return a
   │ ╰────────────────^ attributes hash: 3875154674738355596
   │  
   = FunctionAttributes {
         is_public: true,
         name: "pow",
         params: [
             (
                 "a",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "b",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Numeric(
                 U256,
             ),
         ),
     }

note: 
   ┌─ features/aug_assign.fe:28:5
   │  
28 │ ╭     pub fn lshift(a: u8, b: u8) -> u8:
29 │ │         a <<= b
30 │ │         return a
   │ ╰────────────────^ attributes hash: 2483222044044797577
   │  
   = FunctionAttributes {
         is_public: true,
         name: "lshift",
         params: [
             (
                 "a",
                 Base(
                     Numeric(
                         U8,
                     ),
                 ),
             ),
             (
                 "b",
                 Base(
                     Numeric(
                         U8,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Numeric(
                 U8,
             ),
         ),
     }

note: 
   ┌─ features/aug_assign.fe:32:5
   │  
32 │ ╭     pub fn rshift(a: u8, b: u8) -> u8:
33 │ │         a >>= b
34 │ │         return a
   │ ╰────────────────^ attributes hash: 8331407463202867188
   │  
   = FunctionAttributes {
         is_public: true,
         name: "rshift",
         params: [
             (
                 "a",
                 Base(
                     Numeric(
                         U8,
                     ),
                 ),
             ),
             (
                 "b",
                 Base(
                     Numeric(
                         U8,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Numeric(
                 U8,
             ),
         ),
     }

note: 
   ┌─ features/aug_assign.fe:36:5
   │  
36 │ ╭     pub fn bit_or(a: u8, b: u8) -> u8:
37 │ │         a |= b
38 │ │         return a
   │ ╰────────────────^ attributes hash: 7515214069399565722
   │  
   = FunctionAttributes {
         is_public: true,
         name: "bit_or",
         params: [
             (
                 "a",
                 Base(
                     Numeric(
                         U8,
                     ),
                 ),
             ),
             (
                 "b",
                 Base(
                     Numeric(
                         U8,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Numeric(
                 U8,
             ),
         ),
     }

note: 
   ┌─ features/aug_assign.fe:40:5
   │  
40 │ ╭     pub fn bit_xor(a: u8, b: u8) -> u8:
41 │ │         a ^= b
42 │ │         return a
   │ ╰────────────────^ attributes hash: 14816489374122702462
   │  
   = FunctionAttributes {
         is_public: true,
         name: "bit_xor",
         params: [
             (
                 "a",
                 Base(
                     Numeric(
                         U8,
                     ),
                 ),
             ),
             (
                 "b",
                 Base(
                     Numeric(
                         U8,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Numeric(
                 U8,
             ),
         ),
     }

note: 
   ┌─ features/aug_assign.fe:44:5
   │  
44 │ ╭     pub fn bit_and(a: u8, b: u8) -> u8:
45 │ │         a &= b
46 │ │         return a
   │ ╰────────────────^ attributes hash: 8834182126258714805
   │  
   = FunctionAttributes {
         is_public: true,
         name: "bit_and",
         params: [
             (
                 "a",
                 Base(
                     Numeric(
                         U8,
                     ),
                 ),
             ),
             (
                 "b",
                 Base(
                     Numeric(
                         U8,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Numeric(
                 U8,
             ),
         ),
     }

note: 
   ┌─ features/aug_assign.fe:48:5
   │  
48 │ ╭     pub fn add_from_sto(a: u256, b: u256) -> u256:
49 │ │         self.my_num = a
50 │ │         self.my_num += b
51 │ │         return self.my_num
   │ ╰──────────────────────────^ attributes hash: 3160057218690588985
   │  
   = FunctionAttributes {
         is_public: true,
         name: "add_from_sto",
         params: [
             (
                 "a",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "b",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Numeric(
                 U256,
             ),
         ),
     }

note: 
   ┌─ features/aug_assign.fe:53:5
   │  
53 │ ╭     pub fn add_from_mem(a: u256, b: u256) -> u256:
54 │ │         my_array: u256[10]
55 │ │         my_array[7] = a
56 │ │         my_array[7] += b
57 │ │         return my_array[7]
   │ ╰──────────────────────────^ attributes hash: 11791579375393555928
   │  
   = FunctionAttributes {
         is_public: true,
         name: "add_from_mem",
         params: [
             (
                 "a",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
             (
                 "b",
                 Base(
                     Numeric(
                         U256,
                     ),
                 ),
             ),
         ],
         return_type: Base(
             Numeric(
                 U256,
             ),
         ),
     }

note: 
   ┌─ features/aug_assign.fe:54:9
   │
54 │         my_array: u256[10]
   │         ^^^^^^^^^^^^^^^^^^ attributes hash: 5382577674283633330
   │
   = Array(
         Array {
             size: 10,
             inner: Numeric(
                 U256,
             ),
         },
     )

note: 
   ┌─ features/aug_assign.fe:1:1
   │  
 1 │ ╭ contract Foo:
 2 │ │     my_num: u256
 3 │ │ 
 4 │ │     pub fn add(a: u256, b: u256) -> u256:
   · │
56 │ │         my_array[7] += b
57 │ │         return my_array[7]
   │ ╰──────────────────────────^ attributes hash: 3125844721392561776
   │  
   = ContractAttributes {
         public_functions: [
             FunctionAttributes {
                 is_public: true,
                 name: "add",
                 params: [
                     (
                         "a",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                     (
                         "b",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                 ],
                 return_type: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
             FunctionAttributes {
                 is_public: true,
                 name: "add_from_mem",
                 params: [
                     (
                         "a",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                     (
                         "b",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                 ],
                 return_type: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
             FunctionAttributes {
                 is_public: true,
                 name: "add_from_sto",
                 params: [
                     (
                         "a",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                     (
                         "b",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                 ],
                 return_type: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
             FunctionAttributes {
                 is_public: true,
                 name: "bit_and",
                 params: [
                     (
                         "a",
                         Base(
                             Numeric(
                                 U8,
                             ),
                         ),
                     ),
                     (
                         "b",
                         Base(
                             Numeric(
                                 U8,
                             ),
                         ),
                     ),
                 ],
                 return_type: Base(
                     Numeric(
                         U8,
                     ),
                 ),
             },
             FunctionAttributes {
                 is_public: true,
                 name: "bit_or",
                 params: [
                     (
                         "a",
                         Base(
                             Numeric(
                                 U8,
                             ),
                         ),
                     ),
                     (
                         "b",
                         Base(
                             Numeric(
                                 U8,
                             ),
                         ),
                     ),
                 ],
                 return_type: Base(
                     Numeric(
                         U8,
                     ),
                 ),
             },
             FunctionAttributes {
                 is_public: true,
                 name: "bit_xor",
                 params: [
                     (
                         "a",
                         Base(
                             Numeric(
                                 U8,
                             ),
                         ),
                     ),
                     (
                         "b",
                         Base(
                             Numeric(
                                 U8,
                             ),
                         ),
                     ),
                 ],
                 return_type: Base(
                     Numeric(
                         U8,
                     ),
                 ),
             },
             FunctionAttributes {
                 is_public: true,
                 name: "div",
                 params: [
                     (
                         "a",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                     (
                         "b",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                 ],
                 return_type: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
             FunctionAttributes {
                 is_public: true,
                 name: "lshift",
                 params: [
                     (
                         "a",
                         Base(
                             Numeric(
                                 U8,
                             ),
                         ),
                     ),
                     (
                         "b",
                         Base(
                             Numeric(
                                 U8,
                             ),
                         ),
                     ),
                 ],
                 return_type: Base(
                     Numeric(
                         U8,
                     ),
                 ),
             },
             FunctionAttributes {
                 is_public: true,
                 name: "mod",
                 params: [
                     (
                         "a",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                     (
                         "b",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                 ],
                 return_type: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
             FunctionAttributes {
                 is_public: true,
                 name: "mul",
                 params: [
                     (
                         "a",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                     (
                         "b",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                 ],
                 return_type: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
             FunctionAttributes {
                 is_public: true,
                 name: "pow",
                 params: [
                     (
                         "a",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                     (
                         "b",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                 ],
                 return_type: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
             FunctionAttributes {
                 is_public: true,
                 name: "rshift",
                 params: [
                     (
                         "a",
                         Base(
                             Numeric(
                                 U8,
                             ),
                         ),
                     ),
                     (
                         "b",
                         Base(
                             Numeric(
                                 U8,
                             ),
                         ),
                     ),
                 ],
                 return_type: Base(
                     Numeric(
                         U8,
                     ),
                 ),
             },
             FunctionAttributes {
                 is_public: true,
                 name: "sub",
                 params: [
                     (
                         "a",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                     (
                         "b",
                         Base(
                             Numeric(
                                 U256,
                             ),
                         ),
                     ),
                 ],
                 return_type: Base(
                     Numeric(
                         U256,
                     ),
                 ),
             },
         ],
         init_function: None,
         events: [],
         structs: [],
         external_contracts: [],
     }

note: 
  ┌─ features/aug_assign.fe:4:19
  │
4 │     pub fn add(a: u256, b: u256) -> u256:
  │                   ^^^^ attributes hash: 4293763436908729629
  │
  = Base(
        Numeric(
            U256,
        ),
    )

note: 
  ┌─ features/aug_assign.fe:4:28
  │
4 │     pub fn add(a: u256, b: u256) -> u256:
  │                            ^^^^ attributes hash: 4293763436908729629
  │
  = Base(
        Numeric(
            U256,
        ),
    )

note: 
  ┌─ features/aug_assign.fe:4:37
  │
4 │     pub fn add(a: u256, b: u256) -> u256:
  │                                     ^^^^ attributes hash: 4293763436908729629
  │
  = Base(
        Numeric(
            U256,
        ),
    )

note: 
  ┌─ features/aug_assign.fe:8:19
  │
8 │     pub fn sub(a: u256, b: u256) -> u256:
  │                   ^^^^ attributes hash: 4293763436908729629
  │
  = Base(
        Numeric(
            U256,
        ),
    )

note: 
  ┌─ features/aug_assign.fe:8:28
  │
8 │     pub fn sub(a: u256, b: u256) -> u256:
  │                            ^^^^ attributes hash: 4293763436908729629
  │
  = Base(
        Numeric(
            U256,
        ),
    )

note: 
  ┌─ features/aug_assign.fe:8:37
  │
8 │     pub fn sub(a: u256, b: u256) -> u256:
  │                                     ^^^^ attributes hash: 4293763436908729629
  │
  = Base(
        Numeric(
            U256,
        ),
    )

note: 
   ┌─ features/aug_assign.fe:12:19
   │
12 │     pub fn mul(a: u256, b: u256) -> u256:
   │                   ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:12:28
   │
12 │     pub fn mul(a: u256, b: u256) -> u256:
   │                            ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:12:37
   │
12 │     pub fn mul(a: u256, b: u256) -> u256:
   │                                     ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:16:19
   │
16 │     pub fn div(a: u256, b: u256) -> u256:
   │                   ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:16:28
   │
16 │     pub fn div(a: u256, b: u256) -> u256:
   │                            ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:16:37
   │
16 │     pub fn div(a: u256, b: u256) -> u256:
   │                                     ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:20:19
   │
20 │     pub fn mod(a: u256, b: u256) -> u256:
   │                   ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:20:28
   │
20 │     pub fn mod(a: u256, b: u256) -> u256:
   │                            ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:20:37
   │
20 │     pub fn mod(a: u256, b: u256) -> u256:
   │                                     ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:24:19
   │
24 │     pub fn pow(a: u256, b: u256) -> u256:
   │                   ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:24:28
   │
24 │     pub fn pow(a: u256, b: u256) -> u256:
   │                            ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:24:37
   │
24 │     pub fn pow(a: u256, b: u256) -> u256:
   │                                     ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:28:22
   │
28 │     pub fn lshift(a: u8, b: u8) -> u8:
   │                      ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:28:29
   │
28 │     pub fn lshift(a: u8, b: u8) -> u8:
   │                             ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:28:36
   │
28 │     pub fn lshift(a: u8, b: u8) -> u8:
   │                                    ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:32:22
   │
32 │     pub fn rshift(a: u8, b: u8) -> u8:
   │                      ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:32:29
   │
32 │     pub fn rshift(a: u8, b: u8) -> u8:
   │                             ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:32:36
   │
32 │     pub fn rshift(a: u8, b: u8) -> u8:
   │                                    ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:36:22
   │
36 │     pub fn bit_or(a: u8, b: u8) -> u8:
   │                      ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:36:29
   │
36 │     pub fn bit_or(a: u8, b: u8) -> u8:
   │                             ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:36:36
   │
36 │     pub fn bit_or(a: u8, b: u8) -> u8:
   │                                    ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:40:23
   │
40 │     pub fn bit_xor(a: u8, b: u8) -> u8:
   │                       ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:40:30
   │
40 │     pub fn bit_xor(a: u8, b: u8) -> u8:
   │                              ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:40:37
   │
40 │     pub fn bit_xor(a: u8, b: u8) -> u8:
   │                                     ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:44:23
   │
44 │     pub fn bit_and(a: u8, b: u8) -> u8:
   │                       ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:44:30
   │
44 │     pub fn bit_and(a: u8, b: u8) -> u8:
   │                              ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:44:37
   │
44 │     pub fn bit_and(a: u8, b: u8) -> u8:
   │                                     ^^ attributes hash: 3165084411644393001
   │
   = Base(
         Numeric(
             U8,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:48:28
   │
48 │     pub fn add_from_sto(a: u256, b: u256) -> u256:
   │                            ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:48:37
   │
48 │     pub fn add_from_sto(a: u256, b: u256) -> u256:
   │                                     ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:48:46
   │
48 │     pub fn add_from_sto(a: u256, b: u256) -> u256:
   │                                              ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:53:28
   │
53 │     pub fn add_from_mem(a: u256, b: u256) -> u256:
   │                            ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:53:37
   │
53 │     pub fn add_from_mem(a: u256, b: u256) -> u256:
   │                                     ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:53:46
   │
53 │     pub fn add_from_mem(a: u256, b: u256) -> u256:
   │                                              ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
  ┌─ features/aug_assign.fe:2:13
  │
2 │     my_num: u256
  │             ^^^^ attributes hash: 4293763436908729629
  │
  = Base(
        Numeric(
            U256,
        ),
    )

note: 
   ┌─ features/aug_assign.fe:54:19
   │
54 │         my_array: u256[10]
   │                   ^^^^ attributes hash: 4293763436908729629
   │
   = Base(
         Numeric(
             U256,
         ),
     )

note: 
   ┌─ features/aug_assign.fe:54:19
   │
54 │         my_array: u256[10]
   │                   ^^^^^^^^ attributes hash: 5382577674283633330
   │
   = Array(
         Array {
             size: 10,
             inner: Numeric(
                 U256,
             ),
         },
     )


