---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
  ┌─ type_aliases.fe:3:1
  │
3 │ type Posts = Map<PostId, PostBody>
  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Map<u256, String<32>>

note: 
  ┌─ type_aliases.fe:4:1
  │
4 │ type Scoreboard = Map<PostId, Score>
  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Map<u256, u64>

note: 
  ┌─ type_aliases.fe:5:1
  │
5 │ type AuthorPosts = Map<Author, PostId>
  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Map<address, u256>

note: 
  ┌─ type_aliases.fe:7:1
  │
7 │ type Author = address
  │ ^^^^^^^^^^^^^^^^^^^^^ address

note: 
  ┌─ type_aliases.fe:8:1
  │
8 │ type Score = u64
  │ ^^^^^^^^^^^^^^^^ u64

note: 
  ┌─ type_aliases.fe:9:1
  │
9 │ type PostId = u256
  │ ^^^^^^^^^^^^^^^^^^ u256

note: 
   ┌─ type_aliases.fe:10:1
   │
10 │ type PostBody = String<32>
   │ ^^^^^^^^^^^^^^^^^^^^^^^^^^ String<32>

note: 
   ┌─ type_aliases.fe:13:5
   │
13 │     posts: Posts
   │     ^^^^^^^^^^^^ Map<u256, String<32>>
14 │     authors: AuthorPosts
   │     ^^^^^^^^^^^^^^^^^^^^ Map<address, u256>
15 │     scoreboard: Scoreboard
   │     ^^^^^^^^^^^^^^^^^^^^^^ Map<u256, u64>

note: 
   ┌─ type_aliases.fe:17:5
   │  
17 │ ╭     pub fn post(self, ctx: Context, body: PostBody):
18 │ │         # id: PostId = keccak256(body.abi_encode())
19 │ │         let id: PostId = 0
20 │ │         self.posts[id] = body
21 │ │         self.authors[ctx.msg_sender()]
22 │ │         self.scoreboard[id] = 0
   │ ╰───────────────────────────────^ attributes hash: 16028139387423377736
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         ctx_decl: Some(
             Mutable,
         ),
         params: [
             FunctionParam {
                 name: "ctx",
                 typ: Ok(
                     Struct(
                         Struct {
                             name: "Context",
                             field_count: 0,
                         },
                     ),
                 ),
             },
             FunctionParam {
                 name: "body",
                 typ: Ok(
                     String(
                         FeString {
                             max_size: 32,
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ type_aliases.fe:19:17
   │
19 │         let id: PostId = 0
   │                 ^^^^^^ u256

note: 
   ┌─ type_aliases.fe:19:26
   │
19 │         let id: PostId = 0
   │                          ^ u256: Value
20 │         self.posts[id] = body
   │         ^^^^ Forum: Value

note: 
   ┌─ type_aliases.fe:20:9
   │
20 │         self.posts[id] = body
   │         ^^^^^^^^^^ ^^ u256: Value
   │         │           
   │         Map<u256, String<32>>: Storage { nonce: Some(0) }

note: 
   ┌─ type_aliases.fe:20:9
   │
20 │         self.posts[id] = body
   │         ^^^^^^^^^^^^^^   ^^^^ String<32>: Memory
   │         │                 
   │         String<32>: Storage { nonce: None }
21 │         self.authors[ctx.msg_sender()]
   │         ^^^^ Forum: Value

note: 
   ┌─ type_aliases.fe:21:9
   │
21 │         self.authors[ctx.msg_sender()]
   │         ^^^^^^^^^^^^ ^^^ Context: Memory
   │         │             
   │         Map<address, u256>: Storage { nonce: Some(1) }

note: 
   ┌─ type_aliases.fe:21:22
   │
21 │         self.authors[ctx.msg_sender()]
   │                      ^^^^^^^^^^^^^^^^ address: Value

note: 
   ┌─ type_aliases.fe:21:9
   │
21 │         self.authors[ctx.msg_sender()]
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Storage { nonce: None }
22 │         self.scoreboard[id] = 0
   │         ^^^^ Forum: Value

note: 
   ┌─ type_aliases.fe:22:9
   │
22 │         self.scoreboard[id] = 0
   │         ^^^^^^^^^^^^^^^ ^^ u256: Value
   │         │                
   │         Map<u256, u64>: Storage { nonce: Some(2) }

note: 
   ┌─ type_aliases.fe:22:9
   │
22 │         self.scoreboard[id] = 0
   │         ^^^^^^^^^^^^^^^^^^^   ^ u64: Value
   │         │                      
   │         u64: Storage { nonce: None }

note: 
   ┌─ type_aliases.fe:24:5
   │  
24 │ ╭     pub fn upvote(self, id: PostId) -> Score:
25 │ │         let score: Score = self.scoreboard[id] + 1
26 │ │         self.scoreboard[id] = score
27 │ │         return score
   │ ╰────────────────────^ attributes hash: 15818897980290454718
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         ctx_decl: None,
         params: [
             FunctionParam {
                 name: "id",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Numeric(
                     U64,
                 ),
             ),
         ),
     }

note: 
   ┌─ type_aliases.fe:25:20
   │
25 │         let score: Score = self.scoreboard[id] + 1
   │                    ^^^^^ u64

note: 
   ┌─ type_aliases.fe:25:28
   │
25 │         let score: Score = self.scoreboard[id] + 1
   │                            ^^^^ Forum: Value

note: 
   ┌─ type_aliases.fe:25:28
   │
25 │         let score: Score = self.scoreboard[id] + 1
   │                            ^^^^^^^^^^^^^^^ ^^ u256: Value
   │                            │                
   │                            Map<u256, u64>: Storage { nonce: Some(2) }

note: 
   ┌─ type_aliases.fe:25:28
   │
25 │         let score: Score = self.scoreboard[id] + 1
   │                            ^^^^^^^^^^^^^^^^^^^   ^ u64: Value
   │                            │                      
   │                            u64: Storage { nonce: None } => Value

note: 
   ┌─ type_aliases.fe:25:28
   │
25 │         let score: Score = self.scoreboard[id] + 1
   │                            ^^^^^^^^^^^^^^^^^^^^^^^ u64: Value
26 │         self.scoreboard[id] = score
   │         ^^^^ Forum: Value

note: 
   ┌─ type_aliases.fe:26:9
   │
26 │         self.scoreboard[id] = score
   │         ^^^^^^^^^^^^^^^ ^^ u256: Value
   │         │                
   │         Map<u256, u64>: Storage { nonce: Some(2) }

note: 
   ┌─ type_aliases.fe:26:9
   │
26 │         self.scoreboard[id] = score
   │         ^^^^^^^^^^^^^^^^^^^   ^^^^^ u64: Value
   │         │                      
   │         u64: Storage { nonce: None }
27 │         return score
   │                ^^^^^ u64: Value

note: 
   ┌─ type_aliases.fe:29:5
   │  
29 │ ╭     pub fn get_post(self, id: PostId) -> PostBody:
30 │ │         return self.posts[id].to_mem()
   │ ╰──────────────────────────────────────^ attributes hash: 9921789917420135973
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         ctx_decl: None,
         params: [
             FunctionParam {
                 name: "id",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 32,
                 },
             ),
         ),
     }

note: 
   ┌─ type_aliases.fe:30:16
   │
30 │         return self.posts[id].to_mem()
   │                ^^^^ Forum: Value

note: 
   ┌─ type_aliases.fe:30:16
   │
30 │         return self.posts[id].to_mem()
   │                ^^^^^^^^^^ ^^ u256: Value
   │                │           
   │                Map<u256, String<32>>: Storage { nonce: Some(0) }

note: 
   ┌─ type_aliases.fe:30:16
   │
30 │         return self.posts[id].to_mem()
   │                ^^^^^^^^^^^^^^ String<32>: Storage { nonce: None }

note: 
   ┌─ type_aliases.fe:30:16
   │
30 │         return self.posts[id].to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^^^^ String<32>: Storage { nonce: None } => Memory


