---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
  ┌─ type_aliases.fe:1:1
  │
1 │ type Posts = Map<PostId, PostBody>
  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Map<u256, String<32>>

note: 
  ┌─ type_aliases.fe:3:1
  │
3 │ type Scoreboard = Map<PostId, Score>
  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Map<u256, u64>

note: 
  ┌─ type_aliases.fe:5:1
  │
5 │ type AuthorPosts = Map<Author, PostId>
  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Map<address, u256>

note: 
  ┌─ type_aliases.fe:7:1
  │
7 │ type Author = address
  │ ^^^^^^^^^^^^^^^^^^^^^ address

note: 
  ┌─ type_aliases.fe:9:1
  │
9 │ type Score = u64
  │ ^^^^^^^^^^^^^^^^ u64

note: 
   ┌─ type_aliases.fe:11:1
   │
11 │ type PostId = u256
   │ ^^^^^^^^^^^^^^^^^^ u256

note: 
   ┌─ type_aliases.fe:13:1
   │
13 │ type PostBody = String<32>
   │ ^^^^^^^^^^^^^^^^^^^^^^^^^^ String<32>

note: 
   ┌─ type_aliases.fe:16:5
   │
16 │     posts: Posts
   │     ^^^^^^^^^^^^ Map<u256, String<32>>
17 │     authors: AuthorPosts
   │     ^^^^^^^^^^^^^^^^^^^^ Map<address, u256>
18 │     scoreboard: Scoreboard
   │     ^^^^^^^^^^^^^^^^^^^^^^ Map<u256, u64>

note: 
   ┌─ type_aliases.fe:20:5
   │  
20 │ ╭     pub fn post(self, ctx: Context, body: PostBody) {
21 │ │         let id: PostId = 0
22 │ │         self.posts[id] = body
23 │ │         self.authors[ctx.msg_sender()]
24 │ │         self.scoreboard[id] = 0
25 │ │     }
   │ ╰─────^ self: Some(Mutable), params: [{ label: None, name: ctx, typ: Context }, { label: None, name: body, typ: String<32> }] -> ()

note: 
   ┌─ type_aliases.fe:21:13
   │
21 │         let id: PostId = 0
   │             ^^ u256

note: 
   ┌─ type_aliases.fe:21:26
   │
21 │         let id: PostId = 0
   │                          ^ u256
22 │         self.posts[id] = body
   │         ^^^^ Forum

note: 
   ┌─ type_aliases.fe:22:9
   │
22 │         self.posts[id] = body
   │         ^^^^^^^^^^ ^^ u256
   │         │           
   │         SPtr<Map<u256, String<32>>>

note: 
   ┌─ type_aliases.fe:22:9
   │
22 │         self.posts[id] = body
   │         ^^^^^^^^^^^^^^   ^^^^ String<32>
   │         │                 
   │         SPtr<String<32>>
23 │         self.authors[ctx.msg_sender()]
   │         ^^^^ Forum

note: 
   ┌─ type_aliases.fe:23:9
   │
23 │         self.authors[ctx.msg_sender()]
   │         ^^^^^^^^^^^^ ^^^ Context
   │         │             
   │         SPtr<Map<address, u256>>

note: 
   ┌─ type_aliases.fe:23:22
   │
23 │         self.authors[ctx.msg_sender()]
   │                      ^^^^^^^^^^^^^^^^ address

note: 
   ┌─ type_aliases.fe:23:9
   │
23 │         self.authors[ctx.msg_sender()]
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SPtr<u256>
24 │         self.scoreboard[id] = 0
   │         ^^^^ Forum

note: 
   ┌─ type_aliases.fe:24:9
   │
24 │         self.scoreboard[id] = 0
   │         ^^^^^^^^^^^^^^^ ^^ u256
   │         │                
   │         SPtr<Map<u256, u64>>

note: 
   ┌─ type_aliases.fe:24:9
   │
24 │         self.scoreboard[id] = 0
   │         ^^^^^^^^^^^^^^^^^^^   ^ u64
   │         │                      
   │         SPtr<u64>

note: 
   ┌─ type_aliases.fe:27:5
   │  
27 │ ╭     pub fn upvote(self, id: PostId) -> Score {
28 │ │         let score: Score = self.scoreboard[id] + 1
29 │ │         self.scoreboard[id] = score
30 │ │         return score
31 │ │     }
   │ ╰─────^ self: Some(Mutable), params: [{ label: None, name: id, typ: u256 }] -> u64

note: 
   ┌─ type_aliases.fe:28:13
   │
28 │         let score: Score = self.scoreboard[id] + 1
   │             ^^^^^ u64

note: 
   ┌─ type_aliases.fe:28:28
   │
28 │         let score: Score = self.scoreboard[id] + 1
   │                            ^^^^ Forum

note: 
   ┌─ type_aliases.fe:28:28
   │
28 │         let score: Score = self.scoreboard[id] + 1
   │                            ^^^^^^^^^^^^^^^ ^^ u256
   │                            │                
   │                            SPtr<Map<u256, u64>>

note: 
   ┌─ type_aliases.fe:28:28
   │
28 │         let score: Score = self.scoreboard[id] + 1
   │                            ^^^^^^^^^^^^^^^^^^^   ^ u64
   │                            │                      
   │                            SPtr<u64> -> u64

note: 
   ┌─ type_aliases.fe:28:28
   │
28 │         let score: Score = self.scoreboard[id] + 1
   │                            ^^^^^^^^^^^^^^^^^^^^^^^ u64
29 │         self.scoreboard[id] = score
   │         ^^^^ Forum

note: 
   ┌─ type_aliases.fe:29:9
   │
29 │         self.scoreboard[id] = score
   │         ^^^^^^^^^^^^^^^ ^^ u256
   │         │                
   │         SPtr<Map<u256, u64>>

note: 
   ┌─ type_aliases.fe:29:9
   │
29 │         self.scoreboard[id] = score
   │         ^^^^^^^^^^^^^^^^^^^   ^^^^^ u64
   │         │                      
   │         SPtr<u64>
30 │         return score
   │                ^^^^^ u64

note: 
   ┌─ type_aliases.fe:33:5
   │  
33 │ ╭     pub fn get_post(self, id: PostId) -> PostBody {
34 │ │         return self.posts[id].to_mem()
35 │ │     }
   │ ╰─────^ self: Some(Mutable), params: [{ label: None, name: id, typ: u256 }] -> String<32>

note: 
   ┌─ type_aliases.fe:34:16
   │
34 │         return self.posts[id].to_mem()
   │                ^^^^ Forum

note: 
   ┌─ type_aliases.fe:34:16
   │
34 │         return self.posts[id].to_mem()
   │                ^^^^^^^^^^ ^^ u256
   │                │           
   │                SPtr<Map<u256, String<32>>>

note: 
   ┌─ type_aliases.fe:34:16
   │
34 │         return self.posts[id].to_mem()
   │                ^^^^^^^^^^^^^^ SPtr<String<32>>

note: 
   ┌─ type_aliases.fe:34:16
   │
34 │         return self.posts[id].to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^^^^ String<32>


