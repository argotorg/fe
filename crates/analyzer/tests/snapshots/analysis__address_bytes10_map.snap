---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
  ┌─ address_bytes10_map.fe:2:5
  │
2 │     bar: Map<address, Array<u8, 10>>
  │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Map<address, Array<u8, 10>>

note: 
  ┌─ address_bytes10_map.fe:4:5
  │  
4 │ ╭     pub fn read_bar(self, key: address) -> Array<u8, 10> {
5 │ │         return self.bar[key].to_mem()
6 │ │     }
  │ ╰─────^ attributes hash: 7365261960972751402
  │  
  = FunctionSignature {
        self_decl: Some(
            Mutable,
        ),
        ctx_decl: None,
        params: [
            FunctionParam {
                label: None,
                name: "key",
                typ: Ok(
                    Base(
                        Address,
                    ),
                ),
            },
        ],
        return_type: Ok(
            Array(
                Array {
                    size: 10,
                    inner: Numeric(
                        U8,
                    ),
                },
            ),
        ),
    }

note: 
  ┌─ address_bytes10_map.fe:5:16
  │
5 │         return self.bar[key].to_mem()
  │                ^^^^ Foo: Value

note: 
  ┌─ address_bytes10_map.fe:5:16
  │
5 │         return self.bar[key].to_mem()
  │                ^^^^^^^^ ^^^ address: Value
  │                │         
  │                Map<address, Array<u8, 10>>: Storage { nonce: Some(0) }

note: 
  ┌─ address_bytes10_map.fe:5:16
  │
5 │         return self.bar[key].to_mem()
  │                ^^^^^^^^^^^^^ Array<u8, 10>: Storage { nonce: None }

note: 
  ┌─ address_bytes10_map.fe:5:16
  │
5 │         return self.bar[key].to_mem()
  │                ^^^^^^^^^^^^^^^^^^^^^^ Array<u8, 10>: Storage { nonce: None } => Memory

note: 
   ┌─ address_bytes10_map.fe:8:5
   │  
 8 │ ╭     pub fn write_bar(self, key: address, value: Array<u8, 10>) {
 9 │ │         self.bar[key] = value
10 │ │     }
   │ ╰─────^ attributes hash: 10331226497424577374
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         ctx_decl: None,
         params: [
             FunctionParam {
                 label: None,
                 name: "key",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 label: None,
                 name: "value",
                 typ: Ok(
                     Array(
                         Array {
                             size: 10,
                             inner: Numeric(
                                 U8,
                             ),
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
  ┌─ address_bytes10_map.fe:9:9
  │
9 │         self.bar[key] = value
  │         ^^^^ Foo: Value

note: 
  ┌─ address_bytes10_map.fe:9:9
  │
9 │         self.bar[key] = value
  │         ^^^^^^^^ ^^^ address: Value
  │         │         
  │         Map<address, Array<u8, 10>>: Storage { nonce: Some(0) }

note: 
  ┌─ address_bytes10_map.fe:9:9
  │
9 │         self.bar[key] = value
  │         ^^^^^^^^^^^^^   ^^^^^ Array<u8, 10>: Memory
  │         │                
  │         Array<u8, 10>: Storage { nonce: None }


