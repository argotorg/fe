---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(\"features/return_bool_op_or.fe\", &src, &context)"

---
ModuleAttributes {
    type_defs: {
        "Foo": Contract(
            Contract {
                name: "Foo",
                functions: [
                    FunctionAttributes {
                        is_public: true,
                        name: "bar",
                        params: [
                            (
                                "x",
                                Base(
                                    Bool,
                                ),
                            ),
                            (
                                "y",
                                Base(
                                    Bool,
                                ),
                            ),
                        ],
                        return_type: Base(
                            Bool,
                        ),
                    },
                ],
            },
        ),
    },
}

note: 
  ┌─ features/return_bool_op_or.fe:3:16
  │
3 │         return x or y
  │                ^ attributes hash: 519621297275845584
  │
  = ExpressionAttributes {
        typ: Base(
            Bool,
        ),
        location: Value,
        move_location: None,
    }

note: 
  ┌─ features/return_bool_op_or.fe:3:21
  │
3 │         return x or y
  │                     ^ attributes hash: 519621297275845584
  │
  = ExpressionAttributes {
        typ: Base(
            Bool,
        ),
        location: Value,
        move_location: None,
    }

note: 
  ┌─ features/return_bool_op_or.fe:3:16
  │
3 │         return x or y
  │                ^^^^^^ attributes hash: 519621297275845584
  │
  = ExpressionAttributes {
        typ: Base(
            Bool,
        ),
        location: Value,
        move_location: None,
    }

note: 
  ┌─ features/return_bool_op_or.fe:2:5
  │  
2 │ ╭     pub fn bar(x: bool, y: bool) -> bool:
3 │ │         return x or y
  │ ╰─────────────────────^ attributes hash: 1533992358452030354
  │  
  = FunctionAttributes {
        is_public: true,
        name: "bar",
        params: [
            (
                "x",
                Base(
                    Bool,
                ),
            ),
            (
                "y",
                Base(
                    Bool,
                ),
            ),
        ],
        return_type: Base(
            Bool,
        ),
    }

note: 
  ┌─ features/return_bool_op_or.fe:1:1
  │  
1 │ ╭ contract Foo:
2 │ │     pub fn bar(x: bool, y: bool) -> bool:
3 │ │         return x or y
  │ ╰─────────────────────^ attributes hash: 14335401137548040534
  │  
  = ContractAttributes {
        public_functions: [
            FunctionAttributes {
                is_public: true,
                name: "bar",
                params: [
                    (
                        "x",
                        Base(
                            Bool,
                        ),
                    ),
                    (
                        "y",
                        Base(
                            Bool,
                        ),
                    ),
                ],
                return_type: Base(
                    Bool,
                ),
            },
        ],
        init_function: None,
        events: [],
        structs: [],
        external_contracts: [],
    }

note: 
  ┌─ features/return_bool_op_or.fe:2:19
  │
2 │     pub fn bar(x: bool, y: bool) -> bool:
  │                   ^^^^ attributes hash: 5425972608982369985
  │
  = Base(
        Bool,
    )

note: 
  ┌─ features/return_bool_op_or.fe:2:28
  │
2 │     pub fn bar(x: bool, y: bool) -> bool:
  │                            ^^^^ attributes hash: 5425972608982369985
  │
  = Base(
        Bool,
    )

note: 
  ┌─ features/return_bool_op_or.fe:2:37
  │
2 │     pub fn bar(x: bool, y: bool) -> bool:
  │                                     ^^^^ attributes hash: 5425972608982369985
  │
  = Base(
        Bool,
    )


