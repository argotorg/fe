---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
  ┌─ events.fe:5:9
  │
5 │         idx num1: u256
  │         ^^^^^^^^^^^^^^ u256
6 │         num2: u256
  │         ^^^^^^^^^^ u256

note: 
   ┌─ events.fe:10:9
   │
10 │         num: u256
   │         ^^^^^^^^^ u256
11 │         addr: address
   │         ^^^^^^^^^^^^^ address

note: 
   ┌─ events.fe:15:9
   │
15 │         num1: u256
   │         ^^^^^^^^^^ u256
16 │         idx addr: address
   │         ^^^^^^^^^^^^^^^^^ address
17 │         num2: u256
   │         ^^^^^^^^^^ u256
18 │         my_bytes: Array<u8, 100>
   │         ^^^^^^^^^^^^^^^^^^^^^^^^ Array<u8, 100>

note: 
   ┌─ events.fe:22:9
   │
22 │         addrs: Array<address, 2>
   │         ^^^^^^^^^^^^^^^^^^^^^^^^ Array<address, 2>

note: 
   ┌─ events.fe:25:5
   │  
25 │ ╭     pub fn emit_nums(ctx: Context) {
26 │ │         emit Nums(ctx, num1: 26, num2: 42)
27 │ │     }
   │ ╰─────^ attributes hash: 5519676733853656531
   │  
   = FunctionSignature {
         self_decl: None,
         ctx_decl: Some(
             Mutable,
         ),
         params: [
             FunctionParam {
                 label: None,
                 name: "ctx",
                 typ: Ok(
                     Struct(
                         Struct {
                             name: "Context",
                             field_count: 0,
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ events.fe:26:19
   │
26 │         emit Nums(ctx, num1: 26, num2: 42)
   │                   ^^^        ^^        ^^ u256: Value
   │                   │          │          
   │                   │          u256: Value
   │                   Context: Memory

note: 
   ┌─ events.fe:26:9
   │
26 │         emit Nums(ctx, num1: 26, num2: 42)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4681095448721924839
   │
   = Event {
         name: "Nums",
         fields: [
             EventField {
                 name: "num1",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
                 is_indexed: true,
             },
             EventField {
                 name: "num2",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
                 is_indexed: false,
             },
         ],
     }

note: 
   ┌─ events.fe:29:5
   │  
29 │ ╭     pub fn emit_bases(ctx: Context, addr: address) {
30 │ │         emit Bases(ctx, num: 26, addr)
31 │ │     }
   │ ╰─────^ attributes hash: 15383426943610850221
   │  
   = FunctionSignature {
         self_decl: None,
         ctx_decl: Some(
             Mutable,
         ),
         params: [
             FunctionParam {
                 label: None,
                 name: "ctx",
                 typ: Ok(
                     Struct(
                         Struct {
                             name: "Context",
                             field_count: 0,
                         },
                     ),
                 ),
             },
             FunctionParam {
                 label: None,
                 name: "addr",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ events.fe:30:20
   │
30 │         emit Bases(ctx, num: 26, addr)
   │                    ^^^       ^^  ^^^^ address: Value
   │                    │         │    
   │                    │         u256: Value
   │                    Context: Memory

note: 
   ┌─ events.fe:30:9
   │
30 │         emit Bases(ctx, num: 26, addr)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4407350417102602838
   │
   = Event {
         name: "Bases",
         fields: [
             EventField {
                 name: "num",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "addr",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
                 is_indexed: false,
             },
         ],
     }

note: 
   ┌─ events.fe:33:5
   │  
33 │ ╭     pub fn emit_mix(ctx: Context, addr: address, my_bytes: Array<u8, 100>) {
34 │ │         emit Mix(ctx, num1: 26, addr, num2: 42, my_bytes)
35 │ │     }
   │ ╰─────^ attributes hash: 9652612436637375041
   │  
   = FunctionSignature {
         self_decl: None,
         ctx_decl: Some(
             Mutable,
         ),
         params: [
             FunctionParam {
                 label: None,
                 name: "ctx",
                 typ: Ok(
                     Struct(
                         Struct {
                             name: "Context",
                             field_count: 0,
                         },
                     ),
                 ),
             },
             FunctionParam {
                 label: None,
                 name: "addr",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 label: None,
                 name: "my_bytes",
                 typ: Ok(
                     Array(
                         Array {
                             size: 100,
                             inner: Numeric(
                                 U8,
                             ),
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ events.fe:34:18
   │
34 │         emit Mix(ctx, num1: 26, addr, num2: 42, my_bytes)
   │                  ^^^        ^^  ^^^^        ^^  ^^^^^^^^ Array<u8, 100>: Memory
   │                  │          │   │           │    
   │                  │          │   │           u256: Value
   │                  │          │   address: Value
   │                  │          u256: Value
   │                  Context: Memory

note: 
   ┌─ events.fe:34:9
   │
34 │         emit Mix(ctx, num1: 26, addr, num2: 42, my_bytes)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 12006518826467385253
   │
   = Event {
         name: "Mix",
         fields: [
             EventField {
                 name: "num1",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "addr",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
                 is_indexed: true,
             },
             EventField {
                 name: "num2",
                 typ: Ok(
                     Base(
                         Numeric(
                             U256,
                         ),
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "my_bytes",
                 typ: Ok(
                     Array(
                         Array {
                             size: 100,
                             inner: Numeric(
                                 U8,
                             ),
                         },
                     ),
                 ),
                 is_indexed: false,
             },
         ],
     }

note: 
   ┌─ events.fe:37:5
   │  
37 │ ╭     pub fn emit_addresses(ctx: Context, addr1: address, addr2: address) {
38 │ │         let addrs: Array<address, 2>
39 │ │         addrs[0] = addr1
40 │ │         addrs[1] = addr2
41 │ │         emit Addresses(ctx, addrs)
42 │ │     }
   │ ╰─────^ attributes hash: 18438233211486921531
   │  
   = FunctionSignature {
         self_decl: None,
         ctx_decl: Some(
             Mutable,
         ),
         params: [
             FunctionParam {
                 label: None,
                 name: "ctx",
                 typ: Ok(
                     Struct(
                         Struct {
                             name: "Context",
                             field_count: 0,
                         },
                     ),
                 ),
             },
             FunctionParam {
                 label: None,
                 name: "addr1",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
             FunctionParam {
                 label: None,
                 name: "addr2",
                 typ: Ok(
                     Base(
                         Address,
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ events.fe:38:20
   │
38 │         let addrs: Array<address, 2>
   │                    ^^^^^^^^^^^^^^^^^ Array<address, 2>

note: 
   ┌─ events.fe:39:9
   │
39 │         addrs[0] = addr1
   │         ^^^^^ ^ u256: Value
   │         │      
   │         Array<address, 2>: Memory

note: 
   ┌─ events.fe:39:9
   │
39 │         addrs[0] = addr1
   │         ^^^^^^^^   ^^^^^ address: Value
   │         │           
   │         address: Memory
40 │         addrs[1] = addr2
   │         ^^^^^ ^ u256: Value
   │         │      
   │         Array<address, 2>: Memory

note: 
   ┌─ events.fe:40:9
   │
40 │         addrs[1] = addr2
   │         ^^^^^^^^   ^^^^^ address: Value
   │         │           
   │         address: Memory
41 │         emit Addresses(ctx, addrs)
   │                        ^^^  ^^^^^ Array<address, 2>: Memory
   │                        │     
   │                        Context: Memory

note: 
   ┌─ events.fe:41:9
   │
41 │         emit Addresses(ctx, addrs)
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 17766225573703958283
   │
   = Event {
         name: "Addresses",
         fields: [
             EventField {
                 name: "addrs",
                 typ: Ok(
                     Array(
                         Array {
                             size: 2,
                             inner: Address,
                         },
                     ),
                 ),
                 is_indexed: false,
             },
         ],
     }


