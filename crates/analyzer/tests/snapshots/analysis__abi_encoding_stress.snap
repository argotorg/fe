---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
  ┌─ abi_encoding_stress.fe:2:5
  │
2 │     pub my_num: u256
  │     ^^^^^^^^^^^^^^^^ u256
3 │     pub my_num2: u8
  │     ^^^^^^^^^^^^^^^ u8
4 │     pub my_bool: bool
  │     ^^^^^^^^^^^^^^^^^ bool
5 │     pub my_addr: address
  │     ^^^^^^^^^^^^^^^^^^^^ address

note: 
   ┌─ abi_encoding_stress.fe:8:5
   │
 8 │     my_addrs: Array<address, 5>
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Array<address, 5>
 9 │     my_u128: u128
   │     ^^^^^^^^^^^^^ u128
10 │     my_string: String<10>
   │     ^^^^^^^^^^^^^^^^^^^^^ String<10>
11 │     my_u16s: Array<u16, 255>
   │     ^^^^^^^^^^^^^^^^^^^^^^^^ Array<u16, 255>
12 │     my_bool: bool
   │     ^^^^^^^^^^^^^ bool
13 │     my_bytes: Array<u8, 100>
   │     ^^^^^^^^^^^^^^^^^^^^^^^^ Array<u8, 100>

note: 
   ┌─ abi_encoding_stress.fe:16:9
   │
16 │         my_addrs: Array<address, 5>
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Array<address, 5>
17 │         my_u128: u128
   │         ^^^^^^^^^^^^^ u128
18 │         my_string: String<10>
   │         ^^^^^^^^^^^^^^^^^^^^^ String<10>
19 │         my_u16s: Array<u16, 255>
   │         ^^^^^^^^^^^^^^^^^^^^^^^^ Array<u16, 255>
20 │         my_bool: bool
   │         ^^^^^^^^^^^^^ bool
21 │         my_bytes: Array<u8, 100>
   │         ^^^^^^^^^^^^^^^^^^^^^^^^ Array<u8, 100>

note: 
   ┌─ abi_encoding_stress.fe:23:5
   │  
23 │ ╭     pub fn set_my_addrs(self, my_addrs: Array<address, 5>):
24 │ │         self.my_addrs = my_addrs
   │ ╰────────────────────────────────^ attributes hash: 9394631703967802524
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [
             FunctionParam {
                 name: "my_addrs",
                 typ: Ok(
                     Array(
                         Array {
                             size: 5,
                             inner: Address,
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:24:9
   │
24 │         self.my_addrs = my_addrs
   │         ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:24:9
   │
24 │         self.my_addrs = my_addrs
   │         ^^^^^^^^^^^^^   ^^^^^^^^ Array<address, 5>: Memory
   │         │                
   │         Array<address, 5>: Storage { nonce: Some(0) }

note: 
   ┌─ abi_encoding_stress.fe:26:5
   │  
26 │ ╭     pub fn get_my_addrs(self) -> Array<address, 5>:
27 │ │         return self.my_addrs.to_mem()
   │ ╰─────────────────────────────────────^ attributes hash: 4079318501250934113
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [],
         return_type: Ok(
             Array(
                 Array {
                     size: 5,
                     inner: Address,
                 },
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:27:16
   │
27 │         return self.my_addrs.to_mem()
   │                ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:27:16
   │
27 │         return self.my_addrs.to_mem()
   │                ^^^^^^^^^^^^^ Array<address, 5>: Storage { nonce: Some(0) }

note: 
   ┌─ abi_encoding_stress.fe:27:16
   │
27 │         return self.my_addrs.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^^^ Array<address, 5>: Storage { nonce: Some(0) } => Memory

note: 
   ┌─ abi_encoding_stress.fe:27:16
   │
27 │         return self.my_addrs.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^ BuiltinValueMethod { method: ToMem, typ: Array(Array { size: 5, inner: Address }) }

note: 
   ┌─ abi_encoding_stress.fe:29:5
   │  
29 │ ╭     pub fn set_my_u128(self, my_u128: u128):
30 │ │         self.my_u128 = my_u128
   │ ╰──────────────────────────────^ attributes hash: 9980408974823709141
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [
             FunctionParam {
                 name: "my_u128",
                 typ: Ok(
                     Base(
                         Numeric(
                             U128,
                         ),
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:30:9
   │
30 │         self.my_u128 = my_u128
   │         ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:30:9
   │
30 │         self.my_u128 = my_u128
   │         ^^^^^^^^^^^^   ^^^^^^^ u128: Value
   │         │               
   │         u128: Storage { nonce: Some(1) }

note: 
   ┌─ abi_encoding_stress.fe:32:5
   │  
32 │ ╭     pub fn get_my_u128(self) -> u128:
33 │ │         return self.my_u128
   │ ╰───────────────────────────^ attributes hash: 2605238939391421698
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [],
         return_type: Ok(
             Base(
                 Numeric(
                     U128,
                 ),
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:33:16
   │
33 │         return self.my_u128
   │                ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:33:16
   │
33 │         return self.my_u128
   │                ^^^^^^^^^^^^ u128: Storage { nonce: Some(1) } => Value

note: 
   ┌─ abi_encoding_stress.fe:35:5
   │  
35 │ ╭     pub fn set_my_string(self, my_string: String<10>):
36 │ │         self.my_string = my_string
   │ ╰──────────────────────────────────^ attributes hash: 801613487093993571
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [
             FunctionParam {
                 name: "my_string",
                 typ: Ok(
                     String(
                         FeString {
                             max_size: 10,
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:36:9
   │
36 │         self.my_string = my_string
   │         ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:36:9
   │
36 │         self.my_string = my_string
   │         ^^^^^^^^^^^^^^   ^^^^^^^^^ String<10>: Memory
   │         │                 
   │         String<10>: Storage { nonce: Some(2) }

note: 
   ┌─ abi_encoding_stress.fe:38:5
   │  
38 │ ╭     pub fn get_my_string(self) -> String<10>:
39 │ │         return self.my_string.to_mem()
   │ ╰──────────────────────────────────────^ attributes hash: 8319003966728987416
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 10,
                 },
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:39:16
   │
39 │         return self.my_string.to_mem()
   │                ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:39:16
   │
39 │         return self.my_string.to_mem()
   │                ^^^^^^^^^^^^^^ String<10>: Storage { nonce: Some(2) }

note: 
   ┌─ abi_encoding_stress.fe:39:16
   │
39 │         return self.my_string.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^^^^ String<10>: Storage { nonce: Some(2) } => Memory

note: 
   ┌─ abi_encoding_stress.fe:39:16
   │
39 │         return self.my_string.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^^ BuiltinValueMethod { method: ToMem, typ: String(FeString { max_size: 10 }) }

note: 
   ┌─ abi_encoding_stress.fe:41:5
   │  
41 │ ╭     pub fn set_my_u16s(self, my_u16s: Array<u16, 255>):
42 │ │         self.my_u16s = my_u16s
   │ ╰──────────────────────────────^ attributes hash: 6348795826864150593
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [
             FunctionParam {
                 name: "my_u16s",
                 typ: Ok(
                     Array(
                         Array {
                             size: 255,
                             inner: Numeric(
                                 U16,
                             ),
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:42:9
   │
42 │         self.my_u16s = my_u16s
   │         ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:42:9
   │
42 │         self.my_u16s = my_u16s
   │         ^^^^^^^^^^^^   ^^^^^^^ Array<u16, 255>: Memory
   │         │               
   │         Array<u16, 255>: Storage { nonce: Some(3) }

note: 
   ┌─ abi_encoding_stress.fe:44:5
   │  
44 │ ╭     pub fn get_my_u16s(self) -> Array<u16, 255>:
45 │ │         return self.my_u16s.to_mem()
   │ ╰────────────────────────────────────^ attributes hash: 1359438709249232878
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [],
         return_type: Ok(
             Array(
                 Array {
                     size: 255,
                     inner: Numeric(
                         U16,
                     ),
                 },
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:45:16
   │
45 │         return self.my_u16s.to_mem()
   │                ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:45:16
   │
45 │         return self.my_u16s.to_mem()
   │                ^^^^^^^^^^^^ Array<u16, 255>: Storage { nonce: Some(3) }

note: 
   ┌─ abi_encoding_stress.fe:45:16
   │
45 │         return self.my_u16s.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^^ Array<u16, 255>: Storage { nonce: Some(3) } => Memory

note: 
   ┌─ abi_encoding_stress.fe:45:16
   │
45 │         return self.my_u16s.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^ BuiltinValueMethod { method: ToMem, typ: Array(Array { size: 255, inner: Numeric(U16) }) }

note: 
   ┌─ abi_encoding_stress.fe:47:5
   │  
47 │ ╭     pub fn set_my_bool(self, my_bool: bool):
48 │ │         self.my_bool = my_bool
   │ ╰──────────────────────────────^ attributes hash: 14055988620028862174
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [
             FunctionParam {
                 name: "my_bool",
                 typ: Ok(
                     Base(
                         Bool,
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:48:9
   │
48 │         self.my_bool = my_bool
   │         ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:48:9
   │
48 │         self.my_bool = my_bool
   │         ^^^^^^^^^^^^   ^^^^^^^ bool: Value
   │         │               
   │         bool: Storage { nonce: Some(4) }

note: 
   ┌─ abi_encoding_stress.fe:50:5
   │  
50 │ ╭     pub fn get_my_bool(self) -> bool:
51 │ │         return self.my_bool
   │ ╰───────────────────────────^ attributes hash: 10897195883816692453
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [],
         return_type: Ok(
             Base(
                 Bool,
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:51:16
   │
51 │         return self.my_bool
   │                ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:51:16
   │
51 │         return self.my_bool
   │                ^^^^^^^^^^^^ bool: Storage { nonce: Some(4) } => Value

note: 
   ┌─ abi_encoding_stress.fe:53:5
   │  
53 │ ╭     pub fn set_my_bytes(self, my_bytes: Array<u8, 100>):
54 │ │         self.my_bytes = my_bytes
   │ ╰────────────────────────────────^ attributes hash: 232105020008464236
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [
             FunctionParam {
                 name: "my_bytes",
                 typ: Ok(
                     Array(
                         Array {
                             size: 100,
                             inner: Numeric(
                                 U8,
                             ),
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:54:9
   │
54 │         self.my_bytes = my_bytes
   │         ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:54:9
   │
54 │         self.my_bytes = my_bytes
   │         ^^^^^^^^^^^^^   ^^^^^^^^ Array<u8, 100>: Memory
   │         │                
   │         Array<u8, 100>: Storage { nonce: Some(5) }

note: 
   ┌─ abi_encoding_stress.fe:56:5
   │  
56 │ ╭     pub fn get_my_bytes(self) -> Array<u8, 100>:
57 │ │         return self.my_bytes.to_mem()
   │ ╰─────────────────────────────────────^ attributes hash: 1384022860599926390
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [],
         return_type: Ok(
             Array(
                 Array {
                     size: 100,
                     inner: Numeric(
                         U8,
                     ),
                 },
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:57:16
   │
57 │         return self.my_bytes.to_mem()
   │                ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:57:16
   │
57 │         return self.my_bytes.to_mem()
   │                ^^^^^^^^^^^^^ Array<u8, 100>: Storage { nonce: Some(5) }

note: 
   ┌─ abi_encoding_stress.fe:57:16
   │
57 │         return self.my_bytes.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^^^ Array<u8, 100>: Storage { nonce: Some(5) } => Memory

note: 
   ┌─ abi_encoding_stress.fe:57:16
   │
57 │         return self.my_bytes.to_mem()
   │                ^^^^^^^^^^^^^^^^^^^^ BuiltinValueMethod { method: ToMem, typ: Array(Array { size: 100, inner: Numeric(U8) }) }

note: 
   ┌─ abi_encoding_stress.fe:59:5
   │  
59 │ ╭     pub fn get_my_struct() -> MyStruct:
60 │ │         return MyStruct(
61 │ │             my_num: 42,
62 │ │             my_num2: u8(26),
63 │ │             my_bool: true,
64 │ │             my_addr: address(123456)
65 │ │         )
   │ ╰─────────^ attributes hash: 12792745713144811261
   │  
   = FunctionSignature {
         self_decl: None,
         params: [],
         return_type: Ok(
             Struct(
                 Struct {
                     name: "MyStruct",
                     id: StructId(
                         0,
                     ),
                     field_count: 4,
                 },
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:61:21
   │
61 │             my_num: 42,
   │                     ^^ u256: Value
62 │             my_num2: u8(26),
   │                         ^^ u8: Value

note: 
   ┌─ abi_encoding_stress.fe:62:22
   │
62 │             my_num2: u8(26),
   │                      ^^^^^^ u8: Value
63 │             my_bool: true,
   │                      ^^^^ bool: Value
64 │             my_addr: address(123456)
   │                              ^^^^^^ u256: Value

note: 
   ┌─ abi_encoding_stress.fe:64:22
   │
64 │             my_addr: address(123456)
   │                      ^^^^^^^^^^^^^^^ address: Value

note: 
   ┌─ abi_encoding_stress.fe:60:16
   │  
60 │           return MyStruct(
   │ ╭────────────────^
61 │ │             my_num: 42,
62 │ │             my_num2: u8(26),
63 │ │             my_bool: true,
64 │ │             my_addr: address(123456)
65 │ │         )
   │ ╰─────────^ MyStruct: Memory

note: 
   ┌─ abi_encoding_stress.fe:62:22
   │
62 │             my_num2: u8(26),
   │                      ^^ TypeConstructor(Base(Numeric(U8)))
63 │             my_bool: true,
64 │             my_addr: address(123456)
   │                      ^^^^^^^ TypeConstructor(Base(Address))

note: 
   ┌─ abi_encoding_stress.fe:60:16
   │
60 │         return MyStruct(
   │                ^^^^^^^^ TypeConstructor(Struct(Struct { name: "MyStruct", id: StructId(0), field_count: 4 }))

note: 
   ┌─ abi_encoding_stress.fe:67:5
   │  
67 │ ╭     pub fn mod_my_struct(my_struct: MyStruct) -> MyStruct:
68 │ │         my_struct.my_num = 12341234
69 │ │         my_struct.my_num2 = u8(42)
70 │ │         my_struct.my_bool = false
71 │ │         my_struct.my_addr = address(9999)
72 │ │         return my_struct
   │ ╰────────────────────────^ attributes hash: 6786804746141497115
   │  
   = FunctionSignature {
         self_decl: None,
         params: [
             FunctionParam {
                 name: "my_struct",
                 typ: Ok(
                     Struct(
                         Struct {
                             name: "MyStruct",
                             id: StructId(
                                 0,
                             ),
                             field_count: 4,
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             Struct(
                 Struct {
                     name: "MyStruct",
                     id: StructId(
                         0,
                     ),
                     field_count: 4,
                 },
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:68:9
   │
68 │         my_struct.my_num = 12341234
   │         ^^^^^^^^^ MyStruct: Memory

note: 
   ┌─ abi_encoding_stress.fe:68:9
   │
68 │         my_struct.my_num = 12341234
   │         ^^^^^^^^^^^^^^^^   ^^^^^^^^ u256: Value
   │         │                   
   │         u256: Memory
69 │         my_struct.my_num2 = u8(42)
   │         ^^^^^^^^^ MyStruct: Memory

note: 
   ┌─ abi_encoding_stress.fe:69:9
   │
69 │         my_struct.my_num2 = u8(42)
   │         ^^^^^^^^^^^^^^^^^      ^^ u8: Value
   │         │                       
   │         u8: Memory

note: 
   ┌─ abi_encoding_stress.fe:69:29
   │
69 │         my_struct.my_num2 = u8(42)
   │                             ^^^^^^ u8: Value
70 │         my_struct.my_bool = false
   │         ^^^^^^^^^ MyStruct: Memory

note: 
   ┌─ abi_encoding_stress.fe:70:9
   │
70 │         my_struct.my_bool = false
   │         ^^^^^^^^^^^^^^^^^   ^^^^^ bool: Value
   │         │                    
   │         bool: Memory
71 │         my_struct.my_addr = address(9999)
   │         ^^^^^^^^^ MyStruct: Memory

note: 
   ┌─ abi_encoding_stress.fe:71:9
   │
71 │         my_struct.my_addr = address(9999)
   │         ^^^^^^^^^^^^^^^^^           ^^^^ u256: Value
   │         │                            
   │         address: Memory

note: 
   ┌─ abi_encoding_stress.fe:71:29
   │
71 │         my_struct.my_addr = address(9999)
   │                             ^^^^^^^^^^^^^ address: Value
72 │         return my_struct
   │                ^^^^^^^^^ MyStruct: Memory

note: 
   ┌─ abi_encoding_stress.fe:69:29
   │
69 │         my_struct.my_num2 = u8(42)
   │                             ^^ TypeConstructor(Base(Numeric(U8)))
70 │         my_struct.my_bool = false
71 │         my_struct.my_addr = address(9999)
   │                             ^^^^^^^ TypeConstructor(Base(Address))

note: 
   ┌─ abi_encoding_stress.fe:74:5
   │  
74 │ ╭     pub fn emit_my_event(self):
75 │ │         emit MyEvent(
76 │ │             my_addrs: self.my_addrs.to_mem(),
77 │ │             my_u128: self.my_u128,
   · │
81 │ │             my_bytes: self.my_bytes.to_mem()
82 │ │         )
   │ ╰─────────^ attributes hash: 17603814563784536273
   │  
   = FunctionSignature {
         self_decl: Some(
             Mutable,
         ),
         params: [],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ abi_encoding_stress.fe:76:23
   │
76 │             my_addrs: self.my_addrs.to_mem(),
   │                       ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:76:23
   │
76 │             my_addrs: self.my_addrs.to_mem(),
   │                       ^^^^^^^^^^^^^ Array<address, 5>: Storage { nonce: Some(0) }

note: 
   ┌─ abi_encoding_stress.fe:76:23
   │
76 │             my_addrs: self.my_addrs.to_mem(),
   │                       ^^^^^^^^^^^^^^^^^^^^^^ Array<address, 5>: Storage { nonce: Some(0) } => Memory
77 │             my_u128: self.my_u128,
   │                      ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:77:22
   │
77 │             my_u128: self.my_u128,
   │                      ^^^^^^^^^^^^ u128: Storage { nonce: Some(1) } => Value
78 │             my_string: self.my_string.to_mem(),
   │                        ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:78:24
   │
78 │             my_string: self.my_string.to_mem(),
   │                        ^^^^^^^^^^^^^^ String<10>: Storage { nonce: Some(2) }

note: 
   ┌─ abi_encoding_stress.fe:78:24
   │
78 │             my_string: self.my_string.to_mem(),
   │                        ^^^^^^^^^^^^^^^^^^^^^^^ String<10>: Storage { nonce: Some(2) } => Memory
79 │             my_u16s: self.my_u16s.to_mem(),
   │                      ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:79:22
   │
79 │             my_u16s: self.my_u16s.to_mem(),
   │                      ^^^^^^^^^^^^ Array<u16, 255>: Storage { nonce: Some(3) }

note: 
   ┌─ abi_encoding_stress.fe:79:22
   │
79 │             my_u16s: self.my_u16s.to_mem(),
   │                      ^^^^^^^^^^^^^^^^^^^^^ Array<u16, 255>: Storage { nonce: Some(3) } => Memory
80 │             my_bool: self.my_bool,
   │                      ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:80:22
   │
80 │             my_bool: self.my_bool,
   │                      ^^^^^^^^^^^^ bool: Storage { nonce: Some(4) } => Value
81 │             my_bytes: self.my_bytes.to_mem()
   │                       ^^^^ Foo: Value

note: 
   ┌─ abi_encoding_stress.fe:81:23
   │
81 │             my_bytes: self.my_bytes.to_mem()
   │                       ^^^^^^^^^^^^^ Array<u8, 100>: Storage { nonce: Some(5) }

note: 
   ┌─ abi_encoding_stress.fe:81:23
   │
81 │             my_bytes: self.my_bytes.to_mem()
   │                       ^^^^^^^^^^^^^^^^^^^^^^ Array<u8, 100>: Storage { nonce: Some(5) } => Memory

note: 
   ┌─ abi_encoding_stress.fe:75:9
   │  
75 │ ╭         emit MyEvent(
76 │ │             my_addrs: self.my_addrs.to_mem(),
77 │ │             my_u128: self.my_u128,
78 │ │             my_string: self.my_string.to_mem(),
   · │
81 │ │             my_bytes: self.my_bytes.to_mem()
82 │ │         )
   │ ╰─────────^ attributes hash: 2185685122923697263
   │  
   = Event {
         name: "MyEvent",
         fields: [
             EventField {
                 name: "my_addrs",
                 typ: Ok(
                     Array(
                         Array {
                             size: 5,
                             inner: Address,
                         },
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "my_u128",
                 typ: Ok(
                     Base(
                         Numeric(
                             U128,
                         ),
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "my_string",
                 typ: Ok(
                     String(
                         FeString {
                             max_size: 10,
                         },
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "my_u16s",
                 typ: Ok(
                     Array(
                         Array {
                             size: 255,
                             inner: Numeric(
                                 U16,
                             ),
                         },
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "my_bool",
                 typ: Ok(
                     Base(
                         Bool,
                     ),
                 ),
                 is_indexed: false,
             },
             EventField {
                 name: "my_bytes",
                 typ: Ok(
                     Array(
                         Array {
                             size: 100,
                             inner: Numeric(
                                 U8,
                             ),
                         },
                     ),
                 ),
                 is_indexed: false,
             },
         ],
     }

note: 
   ┌─ abi_encoding_stress.fe:76:23
   │
76 │             my_addrs: self.my_addrs.to_mem(),
   │                       ^^^^^^^^^^^^^^^^^^^^ BuiltinValueMethod { method: ToMem, typ: Array(Array { size: 5, inner: Address }) }
77 │             my_u128: self.my_u128,
78 │             my_string: self.my_string.to_mem(),
   │                        ^^^^^^^^^^^^^^^^^^^^^ BuiltinValueMethod { method: ToMem, typ: String(FeString { max_size: 10 }) }
79 │             my_u16s: self.my_u16s.to_mem(),
   │                      ^^^^^^^^^^^^^^^^^^^ BuiltinValueMethod { method: ToMem, typ: Array(Array { size: 255, inner: Numeric(U16) }) }
80 │             my_bool: self.my_bool,
81 │             my_bytes: self.my_bytes.to_mem()
   │                       ^^^^^^^^^^^^^^^^^^^^ BuiltinValueMethod { method: ToMem, typ: Array(Array { size: 100, inner: Numeric(U8) }) }


