---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
   ┌─ strings.fe:5:9
   │
 5 │         s2: String<26>
   │         ^^^^^^^^^^^^^^ String<26>
 6 │         u: u256
   │         ^^^^^^^ u256
 7 │         s1: String<42>
   │         ^^^^^^^^^^^^^^ String<42>
 8 │         s3: String<100>
   │         ^^^^^^^^^^^^^^^ String<100>
 9 │         a: address
   │         ^^^^^^^^^^ address
10 │         s4: String<18>
   │         ^^^^^^^^^^^^^^ String<18>
11 │         s5: String<100>
   │         ^^^^^^^^^^^^^^^ String<100>

note: 
   ┌─ strings.fe:16:5
   │  
16 │ ╭     pub fn bar(s1: String<100>, s2: String<100>) -> String<100>:
17 │ │         return s2
   │ ╰─────────────────^ attributes hash: 17275759829526043442
   │  
   = FunctionSignature {
         self_decl: None,
         ctx_decl: None,
         params: [
             FunctionParam {
                 name: "s1",
                 typ: Ok(
                     String(
                         FeString {
                             max_size: 100,
                         },
                     ),
                 ),
             },
             FunctionParam {
                 name: "s2",
                 typ: Ok(
                     String(
                         FeString {
                             max_size: 100,
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 100,
                 },
             ),
         ),
     }

note: 
   ┌─ strings.fe:17:16
   │
17 │         return s2
   │                ^^ String<100>: Memory

note: 
   ┌─ strings.fe:19:5
   │  
19 │ ╭     pub fn return_static_string() -> String<43>:
20 │ │         return "The quick brown fox jumps over the lazy dog"
   │ ╰────────────────────────────────────────────────────────────^ attributes hash: 16859220121746101219
   │  
   = FunctionSignature {
         self_decl: None,
         ctx_decl: None,
         params: [],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 43,
                 },
             ),
         ),
     }

note: 
   ┌─ strings.fe:20:16
   │
20 │         return "The quick brown fox jumps over the lazy dog"
   │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ String<43>: Memory

note: 
   ┌─ strings.fe:22:5
   │  
22 │ ╭     pub fn return_casted_static_string() -> String<100>:
23 │ │         return String<100>("foo")
   │ ╰─────────────────────────────────^ attributes hash: 11555139189894875514
   │  
   = FunctionSignature {
         self_decl: None,
         ctx_decl: None,
         params: [],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 100,
                 },
             ),
         ),
     }

note: 
   ┌─ strings.fe:23:28
   │
23 │         return String<100>("foo")
   │                            ^^^^^ String<3>: Memory

note: 
   ┌─ strings.fe:23:16
   │
23 │         return String<100>("foo")
   │                ^^^^^^^^^^^^^^^^^^ String<100>: Memory

note: 
   ┌─ strings.fe:25:5
   │  
25 │ ╭     pub fn shorter_string_assign():
26 │ │         let s: String<18> = "fe"
   │ ╰────────────────────────────────^ attributes hash: 8319796915330632390
   │  
   = FunctionSignature {
         self_decl: None,
         ctx_decl: None,
         params: [],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ strings.fe:26:16
   │
26 │         let s: String<18> = "fe"
   │                ^^^^^^^^^^ String<18>

note: 
   ┌─ strings.fe:26:29
   │
26 │         let s: String<18> = "fe"
   │                             ^^^^ String<18>: Memory

note: 
   ┌─ strings.fe:28:5
   │  
28 │ ╭     pub fn return_special_chars() -> String<18>:
29 │ │         return "\n\"'\r\t
30 │ │         foo\\"
   │ ╰──────────────^ attributes hash: 15142206137302311439
   │  
   = FunctionSignature {
         self_decl: None,
         ctx_decl: None,
         params: [],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 18,
                 },
             ),
         ),
     }

note: 
   ┌─ strings.fe:29:16
   │  
29 │           return "\n\"'\r\t
   │ ╭────────────────^
30 │ │         foo\\"
   │ ╰──────────────^ String<18>: Memory


