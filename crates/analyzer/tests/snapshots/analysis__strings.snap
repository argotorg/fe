---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
  ┌─ strings.fe:3:9
  │
3 │         s2: String<26>
  │         ^^^^^^^^^^^^^^ String<26>
4 │         u: u256
  │         ^^^^^^^ u256
5 │         s1: String<42>
  │         ^^^^^^^^^^^^^^ String<42>
6 │         s3: String<100>
  │         ^^^^^^^^^^^^^^^ String<100>
7 │         a: address
  │         ^^^^^^^^^^ address
8 │         s4: String<18>
  │         ^^^^^^^^^^^^^^ String<18>
9 │         s5: String<100>
  │         ^^^^^^^^^^^^^^^ String<100>

note: 
   ┌─ strings.fe:16:5
   │  
16 │ ╭     pub fn bar(s1: String<100>, s2: String<100>) -> String<100> {
17 │ │         return s2
18 │ │     }
   │ ╰─────^ self: None, params: [{ label: None, name: s1, typ: String<100> }, { label: None, name: s2, typ: String<100> }] -> String<100>

note: 
   ┌─ strings.fe:17:16
   │
17 │         return s2
   │                ^^ String<100>

note: 
   ┌─ strings.fe:20:5
   │  
20 │ ╭     pub fn return_static_string() -> String<43> {
21 │ │         return "The quick brown fox jumps over the lazy dog"
22 │ │     }
   │ ╰─────^ self: None, params: [] -> String<43>

note: 
   ┌─ strings.fe:21:16
   │
21 │         return "The quick brown fox jumps over the lazy dog"
   │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ String<43>

note: 
   ┌─ strings.fe:24:5
   │  
24 │ ╭     pub fn return_casted_static_string() -> String<100> {
25 │ │         return String<100>("foo")
26 │ │     }
   │ ╰─────^ self: None, params: [] -> String<100>

note: 
   ┌─ strings.fe:25:28
   │
25 │         return String<100>("foo")
   │                            ^^^^^ String<3>

note: 
   ┌─ strings.fe:25:16
   │
25 │         return String<100>("foo")
   │                ^^^^^^^^^^^^^^^^^^ String<100>

note: 
   ┌─ strings.fe:28:5
   │  
28 │ ╭     pub fn shorter_string_assign() {
29 │ │         let s: String<18> = "fe"
30 │ │     }
   │ ╰─────^ self: None, params: [] -> ()

note: 
   ┌─ strings.fe:29:13
   │
29 │         let s: String<18> = "fe"
   │             ^ String<18>

note: 
   ┌─ strings.fe:29:29
   │
29 │         let s: String<18> = "fe"
   │                             ^^^^ String<18>

note: 
   ┌─ strings.fe:32:5
   │  
32 │ ╭     pub fn return_special_chars() -> String<18> {
33 │ │         return "\n\"'\r\t
34 │ │         foo\\"
35 │ │     }
   │ ╰─────^ self: None, params: [] -> String<18>

note: 
   ┌─ strings.fe:33:16
   │  
33 │           return "\n\"'\r\t
   │ ╭────────────────^
34 │ │         foo\\"
   │ ╰──────────────^ String<18>


