---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
  ┌─ strings.fe:3:9
  │
3 │         s2: String<26>
  │         ^^^^^^^^^^^^^^ String<26>
4 │         u: u256
  │         ^^^^^^^ u256
5 │         s1: String<42>
  │         ^^^^^^^^^^^^^^ String<42>
6 │         s3: String<100>
  │         ^^^^^^^^^^^^^^^ String<100>
7 │         a: address
  │         ^^^^^^^^^^ address
8 │         s4: String<18>
  │         ^^^^^^^^^^^^^^ String<18>
9 │         s5: String<100>
  │         ^^^^^^^^^^^^^^^ String<100>

note: 
   ┌─ strings.fe:14:5
   │  
14 │ ╭     pub fn bar(s1: String<100>, s2: String<100>) -> String<100>:
15 │ │         return s2
   │ ╰─────────────────^ attributes hash: 9796174980111478041
   │  
   = FunctionSignature {
         self_decl: None,
         params: [
             FunctionParam {
                 name: "s1",
                 typ: Ok(
                     String(
                         FeString {
                             max_size: 100,
                         },
                     ),
                 ),
             },
             FunctionParam {
                 name: "s2",
                 typ: Ok(
                     String(
                         FeString {
                             max_size: 100,
                         },
                     ),
                 ),
             },
         ],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 100,
                 },
             ),
         ),
     }

note: 
   ┌─ strings.fe:15:16
   │
15 │         return s2
   │                ^^ String<100>: Memory

note: 
   ┌─ strings.fe:17:5
   │  
17 │ ╭     pub fn return_static_string() -> String<43>:
18 │ │         return "The quick brown fox jumps over the lazy dog"
   │ ╰────────────────────────────────────────────────────────────^ attributes hash: 3426951284599168562
   │  
   = FunctionSignature {
         self_decl: None,
         params: [],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 43,
                 },
             ),
         ),
     }

note: 
   ┌─ strings.fe:18:16
   │
18 │         return "The quick brown fox jumps over the lazy dog"
   │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ String<43>: Memory

note: 
   ┌─ strings.fe:20:5
   │  
20 │ ╭     pub fn return_casted_static_string() -> String<100>:
21 │ │         return String<100>("foo")
   │ ╰─────────────────────────────────^ attributes hash: 15820744965541513152
   │  
   = FunctionSignature {
         self_decl: None,
         params: [],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 100,
                 },
             ),
         ),
     }

note: 
   ┌─ strings.fe:21:28
   │
21 │         return String<100>("foo")
   │                            ^^^^^ String<3>: Memory

note: 
   ┌─ strings.fe:21:16
   │
21 │         return String<100>("foo")
   │                ^^^^^^^^^^^^^^^^^^ String<100>: Memory

note: 
   ┌─ strings.fe:21:16
   │
21 │         return String<100>("foo")
   │                ^^^^^^ TypeConstructor(String(FeString { max_size: 100 }))

note: 
   ┌─ strings.fe:23:5
   │  
23 │ ╭     pub fn shorter_string_assign():
24 │ │         let s: String<18> = "fe"
   │ ╰────────────────────────────────^ attributes hash: 15148455653558261645
   │  
   = FunctionSignature {
         self_decl: None,
         params: [],
         return_type: Ok(
             Base(
                 Unit,
             ),
         ),
     }

note: 
   ┌─ strings.fe:24:16
   │
24 │         let s: String<18> = "fe"
   │                ^^^^^^^^^^ String<18>

note: 
   ┌─ strings.fe:24:29
   │
24 │         let s: String<18> = "fe"
   │                             ^^^^ String<18>: Memory

note: 
   ┌─ strings.fe:26:5
   │  
26 │ ╭     pub fn return_special_chars() -> String<18>:
27 │ │         return "\n\"'\r\t
28 │ │         foo\\"
   │ ╰──────────────^ attributes hash: 14991635520577142188
   │  
   = FunctionSignature {
         self_decl: None,
         params: [],
         return_type: Ok(
             String(
                 FeString {
                     max_size: 18,
                 },
             ),
         ),
     }

note: 
   ┌─ strings.fe:27:16
   │  
27 │           return "\n\"'\r\t
   │ ╭────────────────^
28 │ │         foo\\"
   │ ╰──────────────^ String<18>: Memory


