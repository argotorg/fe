---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
  ┌─ call_statement_with_args.fe:2:5
  │
2 │     baz: Map<u256, u256>
  │     ^^^^^^^^^^^^^^^^^^^^ Map<u256, u256>

note: 
  ┌─ call_statement_with_args.fe:4:5
  │  
4 │ ╭     fn assign(self, val: u256):
5 │ │         self.baz[0] = val
  │ ╰─────────────────────────^ attributes hash: 3042152959006775682
  │  
  = FunctionSignature {
        self_decl: Some(
            Mutable,
        ),
        ctx_decl: None,
        params: [
            FunctionParam {
                name: "val",
                typ: Ok(
                    Base(
                        Numeric(
                            U256,
                        ),
                    ),
                ),
            },
        ],
        return_type: Ok(
            Base(
                Unit,
            ),
        ),
    }

note: 
  ┌─ call_statement_with_args.fe:5:9
  │
5 │         self.baz[0] = val
  │         ^^^^ Foo: Value

note: 
  ┌─ call_statement_with_args.fe:5:9
  │
5 │         self.baz[0] = val
  │         ^^^^^^^^ ^ u256: Value
  │         │         
  │         Map<u256, u256>: Storage { nonce: Some(0) }

note: 
  ┌─ call_statement_with_args.fe:5:9
  │
5 │         self.baz[0] = val
  │         ^^^^^^^^^^^   ^^^ u256: Value
  │         │              
  │         u256: Storage { nonce: None }

note: 
  ┌─ call_statement_with_args.fe:7:5
  │  
7 │ ╭     pub fn bar(self) -> u256:
8 │ │         self.assign(100)
9 │ │         return self.baz[0]
  │ ╰──────────────────────────^ attributes hash: 11773348765973600208
  │  
  = FunctionSignature {
        self_decl: Some(
            Mutable,
        ),
        ctx_decl: None,
        params: [],
        return_type: Ok(
            Base(
                Numeric(
                    U256,
                ),
            ),
        ),
    }

note: 
  ┌─ call_statement_with_args.fe:8:9
  │
8 │         self.assign(100)
  │         ^^^^        ^^^ u256: Value
  │         │            
  │         Foo: Value

note: 
  ┌─ call_statement_with_args.fe:8:9
  │
8 │         self.assign(100)
  │         ^^^^^^^^^^^^^^^^ (): Value
9 │         return self.baz[0]
  │                ^^^^ Foo: Value

note: 
  ┌─ call_statement_with_args.fe:9:16
  │
9 │         return self.baz[0]
  │                ^^^^^^^^ ^ u256: Value
  │                │         
  │                Map<u256, u256>: Storage { nonce: Some(0) }

note: 
  ┌─ call_statement_with_args.fe:9:16
  │
9 │         return self.baz[0]
  │                ^^^^^^^^^^^ u256: Storage { nonce: None } => Value


