fn foo1(x: (i32, u32)) -> i32 {
    let x: (i32, u32)
    x.0
}

fn swap<T, U>(x: (T, U)) -> (U, T) {
    let elem0 = x.0
    let elem1 = x.1
    (elem1, elem0)
}

struct Bar<T, U> {
    t: T,
    u: U,
}

fn swap2<T>(bar: Bar<T, i32>) -> Bar<i32, T> {
    let u = bar.t
    let t = bar.u
    Bar {t, u}
}