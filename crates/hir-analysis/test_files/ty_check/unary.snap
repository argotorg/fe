---
source: crates/hir-analysis/tests/ty_check.rs
expression: res
input_file: crates/hir-analysis/test_files/ty_check/unary.fe
---
note: 
  ┌─ test_file.fe:1:14
  │  
1 │   pub fn foo() {
  │ ╭──────────────^
2 │ │     let z: i32 = +1
3 │ │     let i1: i32 = -1
4 │ │     let i2: i32 = !1
5 │ │ 
6 │ │     let b = !false
7 │ │ }
  │ ╰─^ ()

note: 
  ┌─ test_file.fe:2:9
  │
2 │     let z: i32 = +1
  │         ^ i32

note: 
  ┌─ test_file.fe:2:18
  │
2 │     let z: i32 = +1
  │                  ^^ i32

note: 
  ┌─ test_file.fe:2:19
  │
2 │     let z: i32 = +1
  │                   ^ i32

note: 
  ┌─ test_file.fe:3:9
  │
3 │     let i1: i32 = -1
  │         ^^ i32

note: 
  ┌─ test_file.fe:3:19
  │
3 │     let i1: i32 = -1
  │                   ^^ i32

note: 
  ┌─ test_file.fe:3:20
  │
3 │     let i1: i32 = -1
  │                    ^ i32

note: 
  ┌─ test_file.fe:4:9
  │
4 │     let i2: i32 = !1
  │         ^^ i32

note: 
  ┌─ test_file.fe:4:19
  │
4 │     let i2: i32 = !1
  │                   ^^ i32

note: 
  ┌─ test_file.fe:4:20
  │
4 │     let i2: i32 = !1
  │                    ^ i32

note: 
  ┌─ test_file.fe:6:9
  │
6 │     let b = !false
  │         ^ bool

note: 
  ┌─ test_file.fe:6:13
  │
6 │     let b = !false
  │             ^^^^^^ bool

note: 
  ┌─ test_file.fe:6:14
  │
6 │     let b = !false
  │              ^^^^^ bool


