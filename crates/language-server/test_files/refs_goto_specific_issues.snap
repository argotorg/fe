---
source: crates/language-server/tests/references_snap.rs
assertion_line: 128
expression: snapshot
---
0: type Foo = u32
1: 
2: // Test case 1: Multi-segment path resolution
3: mod nested {
4:     pub const NESTED_CONST: Foo = 100
5: }
6: 
7: fn test_nested() {
8:     // Cursor on NESTED_CONST should resolve to the constant
9:     let a = nested::NESTED_CONST
10: }
11: 
12: // Test case 2: Local variable in method call
13: struct Container {
14:     pub value: Foo
15: }
16: 
17: impl Container {
18:     pub fn get(self) -> Foo {
19:         self.value
20:     }
21: }
22: 
23: fn test_container() {
24:     let container = Container { value: 42 }
25:     // Cursor on container should resolve to the local variable
26:     let result = container.get()
27: }
28: 
---
cursor (9, 8): 1 refs -> goto_specific_issues.fe: goto_specific_issues::test_nested::{fn_body} @ 9:8
cursor (9, 12): 1 refs -> goto_specific_issues.fe: goto_specific_issues::nested @ 3:4
cursor (19, 8): 2 refs -> goto_specific_issues.fe: 18:15; 19:8
cursor (19, 13): 1 refs -> goto_specific_issues.fe: goto_specific_issues::Container @ 14:8
cursor (24, 8): 2 refs -> goto_specific_issues.fe: goto_specific_issues::test_container::{fn_body} @ 24:8; goto_specific_issues::test_container::{fn_body} @ 26:17
cursor (26, 8): 1 refs -> goto_specific_issues.fe: goto_specific_issues::test_container::{fn_body} @ 26:8
cursor (26, 17): 2 refs -> goto_specific_issues.fe: goto_specific_issues::test_container::{fn_body} @ 24:8; goto_specific_issues::test_container::{fn_body} @ 26:17
