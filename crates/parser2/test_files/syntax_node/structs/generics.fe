pub struct StructWithGenericParam<S, T, U>
{
    x: S,
    y: T,
    z: U,
}

pub struct StructWithGenericParam2<
    S,
    T: foo::Trait,
    U
> {
    x: *(S, *i32),
    y: T,
    z: U,
}

pub struct StructWithGenericParam3<
    S: foo::Trait + bar::Trait,
    T,
    U: bar::Trait
> where
    T: Trait1 + Trait2
    Option<T>: Trait1 + Trait2
    Result<U>: Trait2 + Trait3
{
    x: S,
    y: T,
    z: U,
}

pub struct MyArr<T: std::ops::Add, U, const N: usize>
    where
        (T, U): Trait + Trait<i32, Y>
{
    __inner: [T; N],
    __inner2: (T, U)
}