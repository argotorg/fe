---
source: crates/parser2/tests/syntax_node.rs
expression: node
input_file: crates/parser2/test_files/syntax_node/stmts/let.fe
---
Root@0..231
  LetStmt@0..5
    LetKw@0..3 "let"
    WhiteSpace@3..4 " "
    PathPat@4..5
      Path@4..5
        PathSegment@4..5
          Ident@4..5 "x"
  Newline@5..7 "\n\n"
  LetStmt@7..16
    LetKw@7..10 "let"
    WhiteSpace@10..11 " "
    PathPat@11..12
      Path@11..12
        PathSegment@11..12
          Ident@11..12 "x"
    WhiteSpace@12..13 " "
    Eq@13..14 "="
    WhiteSpace@14..15 " "
    LitExpr@15..16
      Lit@15..16
        Int@15..16 "1"
  Newline@16..17 "\n"
  LetStmt@17..31
    LetKw@17..20 "let"
    WhiteSpace@20..21 " "
    PathPat@21..22
      Path@21..22
        PathSegment@21..22
          Ident@21..22 "x"
    Colon@22..23 ":"
    WhiteSpace@23..24 " "
    PathType@24..27
      Path@24..27
        PathSegment@24..27
          Ident@24..27 "i32"
    WhiteSpace@27..28 " "
    Eq@28..29 "="
    WhiteSpace@29..30 " "
    LitExpr@30..31
      Lit@30..31
        Int@30..31 "1"
  Newline@31..32 "\n"
  LetStmt@32..50
    LetKw@32..35 "let"
    WhiteSpace@35..36 " "
    PathPat@36..41
      MutKw@36..39 "mut"
      WhiteSpace@39..40 " "
      Path@40..41
        PathSegment@40..41
          Ident@40..41 "x"
    Colon@41..42 ":"
    WhiteSpace@42..43 " "
    PathType@43..46
      Path@43..46
        PathSegment@43..46
          Ident@43..46 "i32"
    WhiteSpace@46..47 " "
    Eq@47..48 "="
    WhiteSpace@48..49 " "
    LitExpr@49..50
      Lit@49..50
        Int@49..50 "1"
  Newline@50..52 "\n\n"
  ExprStmt@52..62
    AugAssignExpr@52..62
      PathExpr@52..53
        Path@52..53
          PathSegment@52..53
            Ident@52..53 "x"
      WhiteSpace@53..54 " "
      Plus@54..55 "+"
      Eq@55..56 "="
      WhiteSpace@56..57 " "
      BinExpr@57..62
        LitExpr@57..58
          Lit@57..58
            Int@57..58 "1"
        WhiteSpace@58..59 " "
        Plus@59..60 "+"
        WhiteSpace@60..61 " "
        LitExpr@61..62
          Lit@61..62
            Int@61..62 "1"
  Newline@62..63 "\n"
  ExprStmt@63..75
    AugAssignExpr@63..75
      PathExpr@63..64
        Path@63..64
          PathSegment@63..64
            Ident@63..64 "y"
      WhiteSpace@64..65 " "
      LShift@65..67
        Lt@65..66 "<"
        Lt@66..67 "<"
      Eq@67..68 "="
      WhiteSpace@68..69 " "
      BinExpr@69..75
        LitExpr@69..70
          Lit@69..70
            Int@69..70 "1"
        WhiteSpace@70..71 " "
        RShift@71..73
          Gt@71..72 ">"
          Gt@72..73 ">"
        WhiteSpace@73..74 " "
        LitExpr@74..75
          Lit@74..75
            Int@74..75 "2"
  Newline@75..77 "\n\n"
  LetStmt@77..102
    LetKw@77..80 "let"
    WhiteSpace@80..81 " "
    PathTuplePat@81..98
      Path@81..92
        PathSegment@81..87
          Ident@81..87 "MyEnum"
        Colon2@87..89 "::"
        PathSegment@89..92
          Ident@89..92 "Foo"
      TuplePatElemList@92..98
        LParen@92..93 "("
        PathPat@93..94
          Path@93..94
            PathSegment@93..94
              Ident@93..94 "x"
        Comma@94..95 ","
        WhiteSpace@95..96 " "
        PathPat@96..97
          Path@96..97
            PathSegment@96..97
              Ident@96..97 "y"
        RParen@97..98 ")"
    WhiteSpace@98..99 " "
    Eq@99..100 "="
    WhiteSpace@100..101 " "
    PathExpr@101..102
      Path@101..102
        PathSegment@101..102
          Ident@101..102 "e"
  Newline@102..104 "\n\n"
  LetStmt@104..123
    LetKw@104..107 "let"
    WhiteSpace@107..108 " "
    RecordPat@108..119
      Path@108..109
        PathSegment@108..109
          Ident@108..109 "S"
      WhiteSpace@109..110 " "
      RecordPatFieldList@110..119
        LBrace@110..111 "{"
        RecordPatField@111..112
          PathPat@111..112
            Path@111..112
              PathSegment@111..112
                Ident@111..112 "x"
        Comma@112..113 ","
        WhiteSpace@113..114 " "
        RecordPatField@114..118
          Ident@114..115 "y"
          Colon@115..116 ":"
          WhiteSpace@116..117 " "
          PathPat@117..118
            Path@117..118
              PathSegment@117..118
                Ident@117..118 "z"
        RBrace@118..119 "}"
    WhiteSpace@119..120 " "
    Eq@120..121 "="
    WhiteSpace@121..122 " "
    PathExpr@122..123
      Path@122..123
        PathSegment@122..123
          Ident@122..123 "s"
  Newline@123..125 "\n\n"
  LetStmt@125..162
    LetKw@125..128 "let"
    WhiteSpace@128..129 " "
    PathPat@129..130
      Path@129..130
        PathSegment@129..130
          Ident@129..130 "x"
    WhiteSpace@130..131 " "
    Eq@131..132 "="
    WhiteSpace@132..133 " "
    IfExpr@133..162
      IfKw@133..135 "if"
      WhiteSpace@135..136 " "
      PathExpr@136..137
        Path@136..137
          PathSegment@136..137
            Ident@136..137 "b"
      WhiteSpace@137..138 " "
      BlockExpr@138..147
        LBrace@138..139 "{"
        Newline@139..140 "\n"
        WhiteSpace@140..144 "    "
        ExprStmt@144..145
          PathExpr@144..145
            Path@144..145
              PathSegment@144..145
                Ident@144..145 "y"
        Newline@145..146 "\n"
        RBrace@146..147 "}"
      WhiteSpace@147..148 " "
      ElseKw@148..152 "else"
      WhiteSpace@152..153 " "
      BlockExpr@153..162
        LBrace@153..154 "{"
        Newline@154..155 "\n"
        WhiteSpace@155..159 "    "
        ExprStmt@159..160
          PathExpr@159..160
            Path@159..160
              PathSegment@159..160
                Ident@159..160 "z"
        Newline@160..161 "\n"
        RBrace@161..162 "}"
  Newline@162..164 "\n\n"
  LetStmt@164..231
    LetKw@164..167 "let"
    WhiteSpace@167..168 " "
    PathPat@168..169
      Path@168..169
        PathSegment@168..169
          Ident@168..169 "x"
    WhiteSpace@169..170 " "
    Eq@170..171 "="
    WhiteSpace@171..172 " "
    MatchExpr@172..231
      MatchKw@172..177 "match"
      WhiteSpace@177..178 " "
      PathExpr@178..179
        Path@178..179
          PathSegment@178..179
            Ident@178..179 "b"
      WhiteSpace@179..180 " "
      MatchArmList@180..231
        LBrace@180..181 "{"
        Newline@181..182 "\n"
        WhiteSpace@182..186 "    "
        MatchArm@186..218
          OrPat@186..213
            PathTuplePat@186..198
              Path@186..195
                PathSegment@186..192
                  Ident@186..192 "MyEnum"
                Colon2@192..194 "::"
                PathSegment@194..195
                  Ident@194..195 "A"
              TuplePatElemList@195..198
                LParen@195..196 "("
                PathPat@196..197
                  Path@196..197
                    PathSegment@196..197
                      Ident@196..197 "x"
                RParen@197..198 ")"
            WhiteSpace@198..199 " "
            Pipe@199..200 "|"
            WhiteSpace@200..201 " "
            PathTuplePat@201..213
              Path@201..210
                PathSegment@201..207
                  Ident@201..207 "MyEnum"
                Colon2@207..209 "::"
                PathSegment@209..210
                  Ident@209..210 "B"
              TuplePatElemList@210..213
                LParen@210..211 "("
                PathPat@211..212
                  Path@211..212
                    PathSegment@211..212
                      Ident@211..212 "x"
                RParen@212..213 ")"
          WhiteSpace@213..214 " "
          FatArrow@214..216 "=>"
          WhiteSpace@216..217 " "
          PathExpr@217..218
            Path@217..218
              PathSegment@217..218
                Ident@217..218 "x"
        Newline@218..219 "\n"
        WhiteSpace@219..223 "    "
        MatchArm@223..229
          WildCardPat@223..224
            Underscore@223..224 "_"
          WhiteSpace@224..225 " "
          FatArrow@225..227 "=>"
          WhiteSpace@227..228 " "
          LitExpr@228..229
            Lit@228..229
              Int@228..229 "0"
        Newline@229..230 "\n"
        RBrace@230..231 "}"

