contract Foo {
    my_array: Array<u256, 3>

    pub fn bar(mut self) -> u256 {
        self.my_array = [1, 2, 3]
        let mut sum: u256 = 0
        for i in self.my_array.to_mem() {
            sum = sum + i
        }
        return sum
    }
}

#test
fn test_foo(mut ctx: Context) {
    let mut foo: Foo = Foo.create(ctx, 0)
    assert foo.bar() == 6
}