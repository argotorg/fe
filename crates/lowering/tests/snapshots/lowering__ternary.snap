---
source: crates/lowering/tests/lowering.rs
expression: lowered_code

---
struct $tuple_u256_u256_:
    item0: u256
    item1: u256

contract Foo:
    pub fn bar() -> ():
        let $ternary_result_0: u256
        if true:
            $ternary_result_0 = 1
        else:
            $ternary_result_0 = 0

        return baz($ternary_result_0)

    pub fn nested() -> ():
        if true:
            let a: u256 = 10
            let b: u256 = 20
            let x: u256 = 10
            let y: u256 = 20
            let $ternary_result_0: u256
            if true:
                $ternary_result_0 = x
            else:
                $ternary_result_0 = y

            let $ternary_result_1: u256
            if true:
                $ternary_result_1 = a
            else:
                $ternary_result_1 = b

            return double_baz($ternary_result_1, $ternary_result_0)

        return ()

    pub fn nested_ternary() -> ():
        let a: u256 = 10
        let b: u256 = 20
        let x: u256 = 10
        let y: u256 = 20
        let $ternary_result_0: u256
        if true:
            $ternary_result_0 = a
        else:
            let $ternary_result_1: u256
            if true:
                $ternary_result_1 = x
            else:
                $ternary_result_1 = y

            $ternary_result_0 = $ternary_result_1

        return baz($ternary_result_0)

    pub fn in_dec() -> ():
        let a: u256 = 10
        let b: u256 = 20
        let x: u256 = 10
        let y: u256 = 20
        let $ternary_result_0: u256
        if true:
            $ternary_result_0 = x
        else:
            $ternary_result_0 = y

        let $ternary_result_1: u256
        if true:
            $ternary_result_1 = a
        else:
            $ternary_result_1 = b

        let z: $tuple_u256_u256_ = $tuple_u256_u256_(item0=$ternary_result_1, item1=$ternary_result_0)
        return ()

    pub fn baz(val: u256) -> ():
        pass
        return ()

    pub fn double_baz(val1: u256, val2: u256) -> ():
        pass
        return ()
