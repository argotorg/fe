trait Abi {
    type Selector: Encode<Self>
    type Encoder: AbiEncoder
}

trait Encode<A: Abi> {
    fn encode(self, mut _ e: A::Encoder)
}

trait AbiEncoder {
    fn with_encoded_size(_: usize) -> Self
}

struct SolAbi {}
struct SolEncoder {}

impl Abi for SolAbi {
    type Selector = [u8; 4]   // Doesn't impl Encode<SolAbi>
    type Encoder = SolEncoder // Doesn't impl AbiEncoder
}
