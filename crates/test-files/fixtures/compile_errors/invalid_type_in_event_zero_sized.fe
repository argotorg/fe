struct EmptyStruct {}
contract Contract {}

struct UnEmptyStruct {
    v: u32
}

struct AnotherEmpty {
    x: EmptyStruct
}

struct Foo {
    x: Baz
}

struct Baz {
    x: Foo
}


event FirstCase {
    idx a : ()
    idx b : Contract 
    idx c : EmptyStruct
}

event SecondCase {
    idx a: u256 
    idx b: ((), EmptyStruct) 
    idx c: Array<EmptyStruct, 0>
}

event ThirdCase {
    idx a: Array<(), 0>
    idx b: Array<UnEmptyStruct, 0>
}

event FifthCase {
    idx a: Array<(), 0>
    idx b: AnotherEmpty
    idx c: Array<UnEmptyStruct, 1>
}

event SixthCase {
    idx d: UnEmptyStruct
    idx e: ((), UnEmptyStruct)
    idx f: Foo
}

event SeventhCase {
    idx a: u256
    b: Map<u256,u256>
}